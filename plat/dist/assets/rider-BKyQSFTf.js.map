{"version":3,"file":"rider-BKyQSFTf.js","sources":["../../src/api/rider.ts"],"sourcesContent":["import { get } from '../utils/request.js';\n\n/**\n * 获取月度绩效概览 - 调用Apifox真实接口\n * @param year - 年份\n * @param month - 月份\n */\nexport function getPerformanceOverview(year, month) {\n  const m = String(month).padStart(2, '0');\n  console.log(`调用Apifox API获取绩效概览: /api/riders/performances/overview/${year}/${m}`);\n  \n  // 直接调用Apifox接口，不使用任何模拟数据\n  return get(`/api/riders/performances/overview/${year}/${m}`);\n}\n\n/**\n * 获取最近几个月的订单趋势数据\n * @param months - 要获取的月份数量\n */\nexport function getOrderTrends(months = 6) {\n  // 调用后端真实接口获取订单趋势\n  return get('/api/riders/order-trends', { months });\n}\n\n/**\n * 根据时间范围获取营业数据\n * @param start - 开始时间 (可选)\n * @param end - 结束时间 (可选)\n */\nexport function getRecentOperations(start?: string, end?: string) {\n  const params: Record<string, string> = {};\n  if (start) params.start = start;\n  if (end) params.end = end;\n  \n  console.log('🔗 调用营业数据API:', '/api/operations/recent', params);\n  \n  return get('/api/operations/recent', params);\n}\n\n/** Get rider info by ID */\nexport function fetchRiderInfo(riderId) {\n  console.log(`获取骑手信息: ${riderId}`);\n  return get(`/api/riders/${riderId}`);\n}\n\n/** Get rider performance ranking */\nexport function fetchRiderPerformanceRanking(riderId, year, month) {\n  console.log(`获取骑手绩效排名: ${riderId}, ${year}年${month}月`);\n  const monthStr = String(month).padStart(2, '0');\n  return get(`/api/riders/${riderId}/performances/ranking/${year}/${monthStr}`);\n}\n\n/** Get rider performance by rider ID, year and month */\nexport function fetchRiderPerformance(riderId, year, month) {\n  return get(`/api/riders/${riderId}/performances/${year}/${month}`);\n}\n\n/** Get all riders list */\nexport function fetchRidersList(params = {}) {\n  console.log('获取骑手列表', params);\n  return get('/api/riders', params);\n}\n\n/** Get top performing riders */\nexport async function fetchTopPerformingRiders(year, month) {\n  const y = Number(year);\n  const mNum = Number(month);\n  const mStr = String(mNum).padStart(2, '0');\n\n  // 调用Apifox接口\n  return get(`/api/riders/performances/top-performers/${y}/${mStr}`);\n}\n\n// 工具: 格式化百分比\nexport function formatPercentage(value) {\n  if (typeof value !== 'number') return '-';\n  return `${(value * 100).toFixed(2)}%`;\n}\n\n// 工具: 格式化收入，保留两位小数并加千分位\nexport function formatIncome(value) {\n  if (typeof value !== 'number') return '-';\n  return value.toLocaleString('zh-CN', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n}"],"names":["getPerformanceOverview","year","month","m","get","getRecentOperations","start","end","params","fetchRiderInfo","riderId","fetchRiderPerformanceRanking","monthStr","fetchRidersList"],"mappings":"wCAOO,SAASA,EAAuBC,EAAMC,EAAO,CAClD,MAAMC,EAAI,OAAOD,CAAK,EAAE,SAAS,EAAG,GAAG,EACvC,eAAQ,IAAI,yDAAyDD,CAAI,IAAIE,CAAC,EAAE,EAGzEC,EAAI,qCAAqCH,CAAI,IAAIE,CAAC,EAAE,CAC7D,CAgBO,SAASE,EAAoBC,EAAgBC,EAAc,CAChE,MAAMC,EAAiC,CAAA,EACvC,OAAIF,MAAc,MAAQA,GACtBC,MAAY,IAAMA,GAEtB,QAAQ,IAAI,gBAAiB,yBAA0BC,CAAM,EAEtDJ,EAAI,yBAA0BI,CAAM,CAC7C,CAGO,SAASC,EAAeC,EAAS,CACtC,eAAQ,IAAI,WAAWA,CAAO,EAAE,EACzBN,EAAI,eAAeM,CAAO,EAAE,CACrC,CAGO,SAASC,EAA6BD,EAAST,EAAMC,EAAO,CACjE,QAAQ,IAAI,aAAaQ,CAAO,KAAKT,CAAI,IAAIC,CAAK,GAAG,EACrD,MAAMU,EAAW,OAAOV,CAAK,EAAE,SAAS,EAAG,GAAG,EAC9C,OAAOE,EAAI,eAAeM,CAAO,yBAAyBT,CAAI,IAAIW,CAAQ,EAAE,CAC9E,CAQO,SAASC,EAAgBL,EAAS,GAAI,CAC3C,eAAQ,IAAI,SAAUA,CAAM,EACrBJ,EAAI,cAAeI,CAAM,CAClC"}