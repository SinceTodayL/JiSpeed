{"version":3,"file":"index-da8z-ZcH.js","sources":["../../src/api/order.ts","../../node_modules/.pnpm/@vicons+ionicons5@0.13.0/node_modules/@vicons/ionicons5/es/CarOutline.js","../../node_modules/.pnpm/@vicons+ionicons5@0.13.0/node_modules/@vicons/ionicons5/es/FlashOutline.js","../../src/views/rider-manage/index.vue"],"sourcesContent":["/**\n * @author luohan\n * 订单管理API接口\n */\nimport { get, post, put } from '../utils/request.js';\n\n/**\n * 获取所有商家列表\n * @param params - 查询参数\n */\nexport function getAllMerchants(params: any = {}) {\n  console.log('获取所有商家列表', params);\n  return get('/api/merchants', params);\n}\n\n/**\n * 获取指定商家的订单列表\n * @param merchantId - 商家ID\n * @param params - 查询参数\n */\nexport function getMerchantOrders(merchantId: string, params: any = {}) {\n  console.log(`获取商家 ${merchantId} 的订单列表`, params);\n  return get(`/api/merchants/${merchantId}/orders`, params);\n}\n\n/**\n * 获取待派单的订单列表\n * @param params - 查询参数 {page, pageSize}\n */\nexport async function getPendingOrders(params: any = {}) {\n  console.log('获取待派单订单列表', params);\n  const { page = 1, pageSize = 50 } = params;\n  \n  try {\n    // 1. 获取所有商家列表\n    const merchantsResponse = await getAllMerchants({ page: 1, size: 1000 });\n    const merchants = merchantsResponse.data || [];\n    \n    if (!merchants.length) {\n      return { data: [], total: 0 };\n    }\n    \n    // 2. 为每个商家获取待派单订单ID（orderStatus=1表示已支付待派单）\n    const allOrderIds = [];\n    for (const merchant of merchants) {\n      try {\n        const ordersResponse = await getMerchantOrders(merchant.merchantId, {\n          orderStatus: 1, // 已支付待派单\n          page: 1,\n          size: 1000\n        });\n        const orderIds = ordersResponse.data || [];\n        allOrderIds.push(...orderIds);\n      } catch (error) {\n        console.warn(`获取商家 ${merchant.merchantId} 订单失败:`, error);\n      }\n    }\n    \n    if (!allOrderIds.length) {\n      return { data: [], total: 0 };\n    }\n    \n    // 3. 分页处理订单ID\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedOrderIds = allOrderIds.slice(startIndex, endIndex);\n    \n    // 4. 批量获取订单详情\n    const orderDetailsResponse = await getBatchOrderDetails(paginatedOrderIds);\n    const orderDetails = orderDetailsResponse.data || [];\n    \n    return {\n      data: orderDetails,\n      total: allOrderIds.length,\n      page,\n      pageSize\n    };\n  } catch (error) {\n    console.error('获取待派单订单失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 自动派单API - 分配订单给最近的在线骑手\n * @param orderId - 订单ID\n */\nexport function autoAssignOrder(orderId: string) {\n  console.log(`自动派单，订单ID: ${orderId}`);\n  return post(`/api/OrderAssignment/auto-assign/${orderId}`);\n}\n\n/**\n * 手动派单API - 分配订单给指定骑手\n * @param orderAssignmentData - 派单数据 {orderId, riderId}\n */\nexport function manualAssignOrder(orderAssignmentData: {orderId: string, riderId: string}) {\n  console.log('手动派单', orderAssignmentData);\n  return post('/api/OrderAssignment/manual-assign', orderAssignmentData);\n}\n\n/**\n * 获取订单分配信息\n * @param orderId - 订单ID\n */\nexport function getOrderAssignment(orderId: string) {\n  console.log(`获取订单分配信息，订单ID: ${orderId}`);\n  return get(`/api/OrderAssignment/order/${orderId}/assignment`);\n}\n\n/**\n * 获取骑手当前分配的订单列表\n * @param riderId - 骑手ID\n */\nexport function getRiderAssignments(riderId: string) {\n  console.log(`获取骑手分配订单，骑手ID: ${riderId}`);\n  return get(`/api/OrderAssignment/rider/${riderId}/assignments`);\n}\n\n/**\n * 获取所有订单及关联信息（包含骑手、用户、商家、分配信息和订单状态）\n * @returns 所有订单的完整信息\n */\nexport function getAllOrdersWithDetails() {\n  console.log('获取所有订单及关联信息');\n  return get('/api/OrderAssignment/orders/all');\n}\n\n/**\n * 更新订单状态\n * @param statusData - 状态更新数据 {orderId, newStatus, remark}\n */\nexport function updateOrderStatus(statusData: {orderId: string, newStatus: number, remark?: string}) {\n  console.log('更新订单状态', statusData);\n  return put('/api/OrderAssignment/update-status', statusData);\n}\n\n/**\n * 获取所有进行中的订单状态（用于实时监控）\n * @param params - 查询参数\n */\nexport async function getAllActiveOrders(params: any = {}) {\n  console.log('获取所有进行中的订单状态', params);\n  try {\n    // 获取所有活跃状态的订单 (状态 3-6: 已接单到已完成)\n    const response = await get('/api/orders', {\n      status: [3, 4, 5, 6].join(','), // 多状态查询\n      pageSize: 100, // 获取更多数据\n      ...params\n    });\n    \n    console.log('获取活跃订单响应:', response);\n    return response;\n  } catch (error) {\n    console.error('获取活跃订单失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 获取订单列表（支持多种状态筛选）\n * 注意：后端没有直接的/api/orders接口，这里调用getAllMerchants然后聚合订单\n * @param params - 查询参数 {status, page, pageSize, searchTerm}\n */\nexport async function getOrderList(params: any = {}) {\n  console.log('获取订单列表', params);\n  \n  try {\n    // 由于后端没有直接的订单列表API，我们需要通过商家来获取订单\n    const merchantsResponse = await getAllMerchants({ page: 1, size: 100 });\n    console.log('商家API响应:', merchantsResponse);\n    \n    // 后端返回格式: { data: [...], message: \"...\", success: true }\n    const merchants = merchantsResponse?.data || [];\n    \n    if (!merchants.length) {\n      return { data: [], total: 0 };\n    }\n    \n    // 获取第一个商家的订单作为示例（简化处理）\n    const firstMerchant = merchants[0];\n    const merchantId = firstMerchant.MerchantId || firstMerchant.merchantId;\n    \n    const ordersResponse = await getMerchantOrders(merchantId, {\n      orderStatus: params.status,\n      page: params.page || 1,\n      size: params.pageSize || 20\n    });\n    \n    console.log('商家订单API响应:', ordersResponse);\n    \n    return {\n      data: ordersResponse?.data || [],\n      total: ordersResponse?.data?.length || 0\n    };\n  } catch (error) {\n    console.error('获取订单列表失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 获取订单详情\n * @param orderId - 订单ID\n */\nexport function getOrderDetail(orderId: string) {\n  console.log(`获取订单详情，订单ID: ${orderId}`);\n  return get(`/api/orders/${orderId}`);\n}\n\n/**\n * 批量获取订单详情\n * @param orderIds - 订单ID列表\n */\nexport async function getBatchOrderDetails(orderIds: string[]) {\n  console.log(`批量获取订单详情，订单数量: ${orderIds.length}`);\n  \n  try {\n    const orderDetails = [];\n    for (const orderId of orderIds) {\n      try {\n        const response = await getOrderDetail(orderId);\n        if (response.data) {\n          orderDetails.push(response.data);\n        }\n      } catch (error) {\n        console.warn(`获取订单 ${orderId} 详情失败:`, error);\n      }\n    }\n    return { data: orderDetails };\n  } catch (error) {\n    console.error('批量获取订单详情失败:', error);\n    throw error;\n  }\n}\n\n// 订单状态枚举\nexport enum OrderStatus {\n  Pending = 0,      // 待支付\n  Paid = 1,         // 已支付（待派单）\n  Assigned = 2,     // 已分配（待接单）\n  Accepted = 3,     // 已接单（准备中）\n  Preparing = 4,    // 商家准备中\n  PickedUp = 5,     // 已取餐（配送中）\n  Delivered = 6,    // 已送达\n  Completed = 7,    // 已完成\n  Cancelled = 8,    // 已取消\n  Refunded = 9      // 已退款\n}\n\n// 订单状态显示文本映射\nexport const OrderStatusText = {\n  [OrderStatus.Pending]: '待支付',\n  [OrderStatus.Paid]: '已支付',\n  [OrderStatus.Assigned]: '已分配',\n  [OrderStatus.Accepted]: '已接单',\n  [OrderStatus.Preparing]: '准备中',\n  [OrderStatus.PickedUp]: '配送中',\n  [OrderStatus.Delivered]: '已送达',\n  [OrderStatus.Completed]: '已完成',\n  [OrderStatus.Cancelled]: '已取消',\n  [OrderStatus.Refunded]: '已退款'\n};\n\n// 订单状态颜色映射\nexport const OrderStatusColor = {\n  [OrderStatus.Pending]: 'warning',\n  [OrderStatus.Paid]: 'info',\n  [OrderStatus.Assigned]: 'warning',\n  [OrderStatus.Accepted]: 'success',\n  [OrderStatus.Preparing]: 'info',\n  [OrderStatus.PickedUp]: 'success',\n  [OrderStatus.Delivered]: 'success',\n  [OrderStatus.Completed]: 'success',\n  [OrderStatus.Cancelled]: 'error',\n  [OrderStatus.Refunded]: 'error'\n};\n\n/**\n * 获取骑手当前配送订单状态\n * @param riderId - 骑手ID\n */\nexport function getRiderDeliveryStatus(riderId: string) {\n  console.log(`获取骑手配送状态，骑手ID: ${riderId}`);\n  return get(`/api/orders/rider/${riderId}/delivery-status`);\n}\n\n/**\n * 获取骑手配送订单列表（包含详细状态）\n * @param riderId - 骑手ID\n * @param params - 查询参数 {status, page, pageSize}\n */\nexport function getRiderDeliveryOrders(riderId: string, params = {}) {\n  console.log(`获取骑手配送订单列表，骑手ID: ${riderId}`, params);\n  return get(`/api/orders/rider/${riderId}/delivery-orders`, params);\n}\n\n/**\n * 获取骑手实时配送统计\n * @param riderId - 骑手ID\n */\nexport function getRiderDeliveryStats(riderId: string) {\n  console.log(`获取骑手配送统计，骑手ID: ${riderId}`);\n  return get(`/api/orders/rider/${riderId}/delivery-stats`);\n}\n\n/**\n * 批量获取多个骑手的配送状态\n * @param riderIds - 骑手ID列表\n */\nexport function getBatchRiderDeliveryStatus(riderIds: string[]) {\n  console.log(`批量获取骑手配送状态，骑手数量: ${riderIds.length}`);\n  return post('/api/orders/riders/batch-delivery-status', { riderIds });\n}\n\n// 配送状态枚举（针对骑手的状态）\nexport enum DeliveryStatus {\n  NoOrders = 0,        // 无订单\n  WaitingPickup = 1,   // 等待取餐\n  OnTheWay = 2,        // 配送途中\n  Delivered = 3,       // 已送达\n  Multiple = 4         // 多单配送\n}\n\n// 配送状态显示文本\nexport const DeliveryStatusText = {\n  [DeliveryStatus.NoOrders]: '无订单',\n  [DeliveryStatus.WaitingPickup]: '等待取餐',\n  [DeliveryStatus.OnTheWay]: '配送途中',\n  [DeliveryStatus.Delivered]: '已送达',\n  [DeliveryStatus.Multiple]: '多单配送'\n};\n\n// 配送状态颜色\nexport const DeliveryStatusColor = {\n  [DeliveryStatus.NoOrders]: 'default',\n  [DeliveryStatus.WaitingPickup]: 'warning',\n  [DeliveryStatus.OnTheWay]: 'processing',\n  [DeliveryStatus.Delivered]: 'success',\n  [DeliveryStatus.Multiple]: 'purple'\n};\n\n/**\n * 获取订单分配总览数据（用于管理后台总览页面）\n * 包含订单统计和所有骑手的订单分配状态\n */\nexport async function getOrderAssignmentOverview() {\n  console.log('获取订单分配总览数据');\n  \n  try {\n    // 1. 获取所有骑手列表 - 使用正确的API调用\n    console.log('🔄 正在调用骑手列表API...');\n    const ridersResponse = await get('/api/riders', { page: 1, size: 1000 });\n    console.log('✅ 获取骑手列表响应:', JSON.stringify(ridersResponse, null, 2));\n    \n    // 检查响应数据格式并添加详细日志\n    let riders = [];\n    \n    console.log('🔍 详细分析骑手API响应结构:');\n    console.log('📋 响应对象:', ridersResponse);\n    console.log('📋 响应类型:', typeof ridersResponse);\n    console.log('📋 响应键值:', ridersResponse ? Object.keys(ridersResponse) : 'null');\n    \n    if (ridersResponse?.data) {\n      console.log('📋 data字段存在，类型:', typeof ridersResponse.data);\n      console.log('📋 data字段内容:', ridersResponse.data);\n      console.log('📋 data字段键值:', Object.keys(ridersResponse.data || {}));\n    }\n    \n    if (!ridersResponse) {\n      console.error('❌ 骑手API响应为空');\n      riders = [];\n    } else if (ridersResponse?.data?.Riders && Array.isArray(ridersResponse.data.Riders)) {\n      riders = ridersResponse.data.Riders;\n      console.log(`✅ 从 data.Riders 中解析到 ${riders.length} 个骑手:`, riders);\n    } else if (ridersResponse?.data && Array.isArray(ridersResponse.data)) {\n      riders = ridersResponse.data;\n      console.log(`✅ 从 data 数组中解析到 ${riders.length} 个骑手:`, riders);\n    } else if (ridersResponse?.Riders && Array.isArray(ridersResponse.Riders)) {\n      riders = ridersResponse.Riders;\n      console.log(`✅ 从根级 Riders 中解析到 ${riders.length} 个骑手:`, riders);\n    } else if (Array.isArray(ridersResponse)) {\n      riders = ridersResponse;\n      console.log(`✅ 响应本身是数组，包含 ${riders.length} 个骑手:`, riders);\n    } else {\n      console.warn('⚠️ 骑手数据格式不符合预期 - 尝试所有可能的解析路径:');\n      console.warn('  - ridersResponse?.data?.Riders:', ridersResponse?.data?.Riders);\n      console.warn('  - ridersResponse?.data (是否为数组):', Array.isArray(ridersResponse?.data));\n      console.warn('  - ridersResponse?.Riders:', ridersResponse?.Riders);\n      console.warn('  - ridersResponse (是否为数组):', Array.isArray(ridersResponse));\n      console.warn('⚠️ 完整响应数据:', JSON.stringify(ridersResponse, null, 2));\n      riders = [];\n    }\n    \n    console.log(`📋 最终解析到 ${riders.length} 个骑手数据`);\n    \n    // 如果没有骑手数据，返回空的概览\n    if (riders.length === 0) {\n      console.warn('⚠️ 没有找到任何骑手数据，返回空的概览');\n      return {\n        orderStats: {\n          totalOrders: 0,\n          assigned: 0,\n          delivering: 0,\n          completed: 0,\n          assignmentRate: 0\n        },\n        ridersOverview: []\n      };\n    }\n    \n    // 2. 获取订单统计\n    const orderStats = await getOrderStatistics();\n    \n    // 3. 简化骑手数据处理，只获取前20个骑手的详细数据（避免大量并发请求）\n    const limitedRiders = riders.slice(0, 20);\n    const ridersWithOrders = await Promise.all(\n      limitedRiders.map(async (rider) => {\n        try {\n          // 获取骑手当前分配的订单\n          const assignmentsResponse = await getRiderAssignments(rider.RiderId || rider.riderId);\n          const assignments = assignmentsResponse?.data || [];\n          \n          // 简化处理：不再调用配送统计API，减少并发请求\n          const todayCompleted = Math.floor(Math.random() * 10); // 临时数据\n          const avgDeliveryTime = Math.floor(Math.random() * 20) + 15; // 临时数据\n          \n          return {\n            riderId: rider.RiderId || rider.riderId,\n            riderName: rider.Name || rider.name || `骑手${rider.RiderId || rider.riderId}`,\n            status: getRandomRiderStatus(), // 临时随机状态\n            currentOrders: Array.isArray(assignments) ? assignments.length : 0,\n            todayCompleted,\n            avgDeliveryTime,\n            lastOrderTime: Array.isArray(assignments) && assignments.length > 0 ? assignments[0]?.assignedAt : null,\n            location: '位置未知' // 临时数据\n          };\n        } catch (error) {\n          console.warn(`获取骑手 ${rider.RiderId || rider.riderId} 数据失败:`, error);\n          return {\n            riderId: rider.RiderId || rider.riderId,\n            riderName: rider.Name || rider.name || `骑手${rider.RiderId || rider.riderId}`,\n            status: '离线',\n            currentOrders: 0,\n            todayCompleted: 0,\n            avgDeliveryTime: 0,\n            lastOrderTime: null,\n            location: '位置未知'\n          };\n        }\n      })\n    );\n    \n    // 4. 为其余骑手填充基本信息（不调用详细API）\n    const remainingRiders = riders.slice(20).map(rider => ({\n      riderId: rider.RiderId || rider.riderId,\n      riderName: rider.Name || rider.name || `骑手${rider.RiderId || rider.riderId}`,\n      status: '离线',\n      currentOrders: 0,\n      todayCompleted: 0,\n      avgDeliveryTime: 0,\n      lastOrderTime: null,\n      location: '位置未知'\n    }));\n    \n    const allRidersOverview = [...ridersWithOrders, ...remainingRiders];\n    \n    console.log('🎉 订单分配总览数据获取成功');\n    return {\n      orderStats,\n      ridersOverview: allRidersOverview\n    };\n  } catch (error) {\n    console.error('❌ 获取订单分配总览失败:', error);\n    console.error('❌ 错误详情:', {\n      message: error.message,\n      status: error.response?.status,\n      data: error.response?.data\n    });\n    \n    // 返回默认数据而不是抛出错误，确保UI能够显示\n    return {\n      orderStats: {\n        totalOrders: 0,\n        assigned: 0,\n        delivering: 0,\n        completed: 0,\n        assignmentRate: 0\n      },\n      ridersOverview: []\n    };\n  }\n}\n\n/**\n * 获取订单统计数据\n */\nexport async function getOrderStatistics() {\n  try {\n    console.log('开始获取订单统计数据...');\n    \n    // 获取不同状态的订单数量，先简化处理，只调用一次API获取所有订单\n    const ordersResponse = await getOrderList({ page: 1, pageSize: 1 });\n    console.log('订单API响应:', ordersResponse);\n    \n    // 检查响应格式并提取total\n    let totalOrders = 0;\n    if (ordersResponse?.total) {\n      totalOrders = ordersResponse.total;\n    } else if (ordersResponse?.data?.length !== undefined) {\n      totalOrders = ordersResponse.data.length;\n    }\n    \n    // 由于没有详细的状态统计API，使用估算值（后续可以改进）\n    const estimatedAssigned = Math.floor(totalOrders * 0.3); // 假设30%已分配\n    const estimatedDelivering = Math.floor(totalOrders * 0.2); // 假设20%配送中\n    const estimatedCompleted = Math.floor(totalOrders * 0.4); // 假设40%已完成\n    \n    const assignmentRate = totalOrders > 0 ? (((estimatedAssigned + estimatedDelivering) / totalOrders) * 100).toFixed(1) : '0.0';\n    \n    const stats = {\n      totalOrders,\n      assigned: estimatedAssigned + estimatedDelivering,\n      delivering: estimatedDelivering,\n      completed: estimatedCompleted,\n      assignmentRate: parseFloat(assignmentRate)\n    };\n    \n    console.log('计算出的订单统计:', stats);\n    return stats;\n  } catch (error) {\n    console.error('获取订单统计失败:', error);\n    // 返回默认值\n    return {\n      totalOrders: 0,\n      assigned: 0,\n      delivering: 0,\n      completed: 0,\n      assignmentRate: 0\n    };\n  }\n}\n\n// 临时函数：随机生成骑手状态（后续应该从真实的位置服务获取）\nfunction getRandomRiderStatus() {\n  const statuses = ['空闲', '配送中', '离线'];\n  return statuses[Math.floor(Math.random() * statuses.length)];\n}\n","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 512 512'\n}\nexport default defineComponent({\n  name: 'CarOutline',\n  render: function render(_ctx, _cache) {\n    return _openBlock(), _createElementBlock('svg', _hoisted_1, _cache[0] || (_cache[0] = [_createStaticVNode('<path d=\"M80 224l37.78-88.15C123.93 121.5 139.6 112 157.11 112h197.78c17.51 0 33.18 9.5 39.33 23.85L432 224\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M80 224h352v144H80z\"></path><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M112 368v32H80v-32\"></path><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M432 368v32h-32v-32\"></path><circle cx=\"144\" cy=\"288\" r=\"16\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></circle><circle cx=\"368\" cy=\"288\" r=\"16\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></circle>', 6)]))\n  }\n})\n","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 512 512'\n}\nexport default defineComponent({\n  name: 'FlashOutline',\n  render: function render(_ctx, _cache) {\n    return (\n      _openBlock(),\n      _createElementBlock(\n        'svg',\n        _hoisted_1,\n        _cache[0] ||\n          (_cache[0] = [\n            _createElementVNode(\n              'path',\n              {\n                d: 'M315.27 33L96 304h128l-31.51 173.23a2.36 2.36 0 0 0 2.33 2.77h0a2.36 2.36 0 0 0 1.89-.95L416 208H288l31.66-173.25a2.45 2.45 0 0 0-2.44-2.75h0a2.42 2.42 0 0 0-1.95 1z',\n                fill: 'none',\n                stroke: 'currentColor',\n                'stroke-linecap': 'round',\n                'stroke-linejoin': 'round',\n                'stroke-width': '32'\n              },\n              null,\n              -1 /* HOISTED */\n            )\n          ])\n      )\n    )\n  }\n})\n","<script setup lang=\"tsx\">\nimport { ref, onMounted, computed } from 'vue';\nimport { \n  NButton, \n  NInput, \n  NSelect, \n  NSpace, \n  NCard, \n  NModal, \n  NForm, \n  NFormItem, \n  NText, \n  NSpin, \n  NBadge, \n  NGrid, \n  NGi, \n  NStatistic,\n  NIcon,\n  NAvatar,\n  NDivider,\n  NDataTable,\n  NTag,\n  useMessage \n} from 'naive-ui';\nimport type { DataTableColumns } from 'naive-ui';\nimport { \n  BicycleOutline,\n  SearchOutline,\n  RefreshOutline,\n  PersonOutline,\n  CallOutline,\n  CarOutline,\n  TrophyOutline,\n  StatsChartOutline,\n  EyeOutline,\n  WalletOutline,\n  FlashOutline,\n  PauseCircleOutline,\n  TimeOutline\n} from '@vicons/ionicons5';\nimport { fetchRidersList, fetchRiderInfo, fetchRiderPerformanceRanking } from '@/api/rider';\nimport { getAllOrdersWithDetails } from '@/api/order';\n\n\ndefineOptions({\n  name: 'rider-manage'\n});\n\nconst message = useMessage();\nconst loading = ref(false);\nconst tableData = ref<any[]>([]);\n\n// 订单相关数据\nconst ordersLoading = ref(false);\nconst ordersData = ref<any[]>([]);\nconst showOrdersModal = ref(false);\nconst totalOrdersCount = ref(0); // 总订单数\n\nconst pagination = ref({\n  page: 1,\n  pageSize: 20,\n  totalCount: 0,\n  totalPages: 0\n});\n\n// 搜索条件\nconst searchParams = ref({\n  searchTerm: '',\n  page: 1,\n  pageSize: 20\n});\n\n\n\n// 骑手统计数据\nconst riderStats = computed(() => {\n  const total = tableData.value.length;\n  const onlineCount = tableData.value.filter(rider => rider.status === 1).length;\n  \n  return {\n    total,\n    onlineCount,\n  };\n});\n\n// 过滤后的表格数据\nconst filteredTableData = computed(() => {\n  return tableData.value.filter(rider => {\n    if (searchParams.value.searchTerm) {\n      const searchTerm = searchParams.value.searchTerm.toLowerCase();\n      if (!rider.name?.toLowerCase().includes(searchTerm) && \n          !rider.phoneNumber?.toLowerCase().includes(searchTerm)) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n});\n\n// 详情弹窗相关\nconst showDetailModal = ref(false);\nconst detailLoading = ref(false);\nconst riderDetail = ref<any>({});\nconst riderRanking = ref<any>({});\n\n// 当前日期\nconst currentDate = new Date();\nconst currentYear = currentDate.getFullYear();\nconst currentMonth = currentDate.getMonth() + 1;\n\n\n\n\n\n// 获取骑手列表数据\nasync function getRidersList() {\n  try {\n    loading.value = true;\n    \n    // 构建查询参数\n    const params = {\n      page: searchParams.value.page,\n      pageSize: searchParams.value.pageSize\n    };\n    \n    if (searchParams.value.searchTerm) {\n      params.searchTerm = searchParams.value.searchTerm;\n    }\n    \n\n    \n    console.log('🚀 开始请求骑手列表，参数:', params);\n    const response = await fetchRidersList(params);\n    console.log('📥 收到骑手列表响应:', response);\n    \n    if (response && response.data) {\n      console.log('详细的响应数据结构:', response.data);\n      \n      // 尝试多种可能的数据结构\n      let riders = null;\n      let paginationInfo = null;\n      \n      // 情况1: 标准格式 { Riders, Pagination }\n      if (response.data.Riders && Array.isArray(response.data.Riders)) {\n        riders = response.data.Riders;\n        paginationInfo = response.data.Pagination;\n      }\n      // 情况2: 小写格式 { riders, pagination }\n      else if (response.data.riders && Array.isArray(response.data.riders)) {\n        riders = response.data.riders;\n        paginationInfo = response.data.pagination;\n      }\n      // 情况3: 直接是数组\n      else if (Array.isArray(response.data)) {\n        riders = response.data;\n        paginationInfo = null;\n      }\n      \n      console.log('解析出的骑手数据:', riders);\n      console.log('解析出的分页信息:', paginationInfo);\n      \n      if (riders && Array.isArray(riders)) {\n        tableData.value = riders.map((rider, index) => ({\n          ...rider,\n          index: (pagination.value.page - 1) * pagination.value.pageSize + index + 1,\n          riderId: rider.riderId || rider.RiderId || '-',\n          name: rider.name || rider.Name || '-',\n          phoneNumber: rider.phoneNumber || rider.PhoneNumber || '-',\n          vehicleNumber: rider.vehicleNumber || rider.VehicleNumber || '-',\n          applicationUserId: rider.applicationUserId || rider.ApplicationUserId || '-'\n        }));\n        \n        console.log('处理后的表格数据:', tableData.value);\n        \n        // 更新分页信息\n        if (paginationInfo) {\n          pagination.value = {\n            page: paginationInfo.page || paginationInfo.Page || 1,\n            pageSize: paginationInfo.pageSize || paginationInfo.PageSize || 20,\n            totalCount: paginationInfo.totalCount || paginationInfo.TotalCount || 0,\n            totalPages: paginationInfo.totalPages || paginationInfo.TotalPages || 0\n          };\n        } else {\n          // 如果没有分页信息，使用数组长度\n          pagination.value.totalCount = riders.length;\n          pagination.value.totalPages = Math.ceil(riders.length / pagination.value.pageSize);\n        }\n      } else {\n        console.log('没有找到有效的骑手数据数组');\n        tableData.value = [];\n      }\n    } else {\n      message.error(response?.message || '获取骑手列表失败');\n      tableData.value = [];\n    }\n  } catch (error) {\n    message.error('获取骑手列表失败: ' + error.message);\n    tableData.value = [];\n    console.error('Error fetching riders list:', error);\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 搜索骑手\nfunction handleSearch() {\n  message.success(`找到 ${filteredTableData.value.length} 名骑手`);\n}\n\n// 重置搜索条件\nfunction handleReset() {\n  searchParams.value = {\n    searchTerm: '',\n    status: null,\n    page: 1,\n    pageSize: 20\n  };\n  message.info('搜索条件已重置');\n}\n\n// 刷新数据\nfunction handleRefresh() {\n  message.info('正在刷新骑手数据...');\n  getRidersList();\n}\n\n\n\n// 分页变化\nfunction handlePageChange(page: number) {\n  searchParams.value.page = page;\n  pagination.value.page = page;\n  getRidersList();\n}\n\n// 订单表格列定义\nconst ordersColumns: DataTableColumns = [\n  {\n    key: 'index',\n    title: '序号',\n    align: 'center',\n    width: 60,\n    render: (row) => row.index\n  },\n  {\n    key: 'OrderId',\n    title: '订单ID',\n    width: 100,\n    render: (row) => (\n      <n-text code style=\"font-size: 11px;\">\n        {row.OrderId?.slice(-8) || '-'}\n      </n-text>\n    )\n  },\n  {\n    key: 'OrderStatus',\n    title: '状态',\n    align: 'center',\n    width: 90,\n    render: (row) => (\n      <n-tag type={row.statusType} size=\"small\">\n        {row.statusText}\n      </n-tag>\n    )\n  },\n  {\n    key: 'User',\n    title: '用户信息',\n    width: 120,\n    render: (row) => (\n      <div class=\"flex flex-col\">\n        <n-text strong style=\"font-size: 12px;\">\n          {row.User?.Nickname || '未知用户'}\n        </n-text>\n        <n-text depth=\"3\" style=\"font-size: 10px;\">\n          ID: {row.User?.UserId?.slice(-6) || '-'}\n        </n-text>\n      </div>\n    )\n  },\n  {\n    key: 'Merchant',\n    title: '商家信息',\n    width: 140,\n    render: (row) => (\n      <div class=\"flex flex-col\">\n        <n-text strong style=\"font-size: 12px;\">\n          {row.Merchant?.MerchantName || '未知商家'}\n        </n-text>\n        <n-text depth=\"3\" style=\"font-size: 10px; word-break: break-all;\">\n          {row.Merchant?.Location || '-'}\n        </n-text>\n      </div>\n    )\n  },\n  {\n    key: 'Assignment',\n    title: '分配信息',\n    width: 140,\n    render: (row) => {\n      if (!row.Assignment) {\n        return (\n          <n-tag type=\"warning\" size=\"small\">\n            未分配\n          </n-tag>\n        );\n      }\n      return (\n        <div class=\"flex flex-col\">\n          <n-text strong style=\"font-size: 12px;\">\n            {row.Assignment.RiderName || '未知骑手'}\n          </n-text>\n          <n-text depth=\"3\" style=\"font-size: 10px;\">\n            {row.Assignment.RiderPhoneNumber || '-'}\n          </n-text>\n          <n-tag \n            type={row.Assignment.AcceptedStatus ? 'success' : 'warning'} \n            size=\"small\"\n            style=\"margin-top: 2px; font-size: 10px;\"\n          >\n            {row.Assignment.AcceptedStatus ? '已接单' : '待接单'}\n          </n-tag>\n        </div>\n      );\n    }\n  },\n  {\n    key: 'Address',\n    title: '配送地址',\n    width: 160,\n    render: (row) => (\n      <div class=\"flex flex-col\">\n        <n-text strong style=\"font-size: 12px;\">\n          {row.Address?.RecipientName || '未知收件人'}\n        </n-text>\n        <n-text depth=\"3\" style=\"font-size: 10px; word-break: break-all; max-width: 150px;\">\n          {row.Address?.Address || '-'}\n        </n-text>\n      </div>\n    )\n  },\n  {\n    key: 'CreateAt',\n    title: '创建时间',\n    width: 120,\n    render: (row) => (\n      <n-text style=\"font-size: 11px;\">\n        {row.CreateAt ? new Date(row.CreateAt).toLocaleString() : '-'}\n      </n-text>\n    )\n  }\n];\n\nconst columns: DataTableColumns = [\n  {\n    key: 'index',\n    title: '序号',\n    align: 'center',\n    width: 70,\n    render: (row, index) => (\n      <n-badge value={index + 1} type=\"warning\" />\n    )\n  },\n  {\n    key: 'riderInfo',\n    title: '骑手信息',\n    width: 220,\n    render: (row) => (\n      <div class=\"flex items-center gap-12px\">\n        <n-avatar\n          size=\"medium\"\n          style={{\n            backgroundColor: row.status === 1 ? '#fa8c16' : row.status === 0 ? '#d9d9d9' : '#faad14'\n          }}\n        >\n          <n-icon>\n            <BicycleOutline />\n          </n-icon>\n        </n-avatar>\n        <div class=\"flex flex-col\">\n          <n-text strong>{row.name || '未设置姓名'}</n-text>\n          <n-text depth=\"3\" style=\"font-size: 12px;\">\n            ID: {row.riderId?.slice(-8) || '-'}\n          </n-text>\n        </div>\n      </div>\n    )\n  },\n  {\n    key: 'contactInfo',\n    title: '联系方式',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <div class=\"flex items-center justify-center gap-4px\">\n        <n-icon color=\"#1890ff\" size=\"14\">\n          <CallOutline />\n        </n-icon>\n        <n-text style=\"font-size: 12px;\">{row.phoneNumber || '未提供'}</n-text>\n      </div>\n    )\n  },\n  {\n    key: 'vehicleInfo',\n    title: '车辆信息',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <div class=\"flex items-center justify-center gap-4px\">\n        <n-icon color={row.vehicleNumber ? '#52c41a' : '#d9d9d9'} size=\"14\">\n          <CarOutline />\n        </n-icon>\n        <n-text style=\"font-size: 12px;\">{row.vehicleNumber || '未登记'}</n-text>\n      </div>\n    )\n  },\n  {\n    key: 'userAccount',\n    title: '关联账户',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <div class=\"flex items-center justify-center gap-4px\">\n        <n-icon color=\"#722ed1\" size=\"14\">\n          <PersonOutline />\n        </n-icon>\n        <n-text style=\"font-size: 12px; word-break: break-all;\" depth=\"3\">\n          {row.applicationUserId?.slice(-8) || '未关联'}\n        </n-text>\n      </div>\n    )\n  },\n  {\n    key: 'actions',\n    title: '操作',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <n-button \n        type=\"primary\" \n        size=\"small\" \n        onClick={() => handleViewDetail(row.riderId)}\n        style=\"border-radius: 6px; background: linear-gradient(135deg, #fa8c16, #faad14);\"\n      >\n        <div style=\"display: flex; align-items: center; gap: 4px;\">\n          <n-icon size=\"14\">\n            <TrophyOutline />\n          </n-icon>\n          查看绩效\n        </div>\n      </n-button>\n    )\n  }\n];\n\n// 查看骑手详情\nasync function handleViewDetail(riderId: string) {\n  try {\n    detailLoading.value = true;\n    showDetailModal.value = true;\n    riderDetail.value = {};\n    riderRanking.value = {};\n    \n    console.log(`获取骑手详情和绩效排名，ID: ${riderId}`);\n    \n    // 并发请求骑手详情和绩效排名\n    const [detailResponse, rankingResponse] = await Promise.allSettled([\n      fetchRiderInfo(riderId),\n      fetchRiderPerformanceRanking(riderId, currentYear, currentMonth)\n    ]);\n    \n    // 处理骑手详情\n    if (detailResponse.status === 'fulfilled' && detailResponse.value?.data) {\n      riderDetail.value = detailResponse.value.data;\n      console.log('骑手详情:', riderDetail.value);\n    } else {\n      console.error('获取骑手详情失败:', detailResponse);\n    }\n    \n    // 处理绩效排名\n    if (rankingResponse.status === 'fulfilled' && rankingResponse.value?.data) {\n      riderRanking.value = rankingResponse.value.data;\n      console.log('骑手绩效排名:', riderRanking.value);\n    } else {\n      console.error('获取骑手绩效排名失败:', rankingResponse);\n    }\n    \n  } catch (error) {\n    console.error('获取骑手信息失败:', error);\n    message.error('获取骑手信息失败: ' + (error.message || '未知错误'));\n    showDetailModal.value = false;\n  } finally {\n    detailLoading.value = false;\n  }\n}\n\n// 注释：原 handleViewPerformance 函数已删除，功能合并到 handleViewDetail\n\n// 格式化排名键名\nfunction formatRankingKey(key: string) {\n  const keyMap = {\n    'totalOrdersRanking': '总订单排名',\n    'onTimeRateRanking': '准时率排名', \n    'goodReviewRateRanking': '好评率排名',\n    'incomeRanking': '收入排名',\n    'TotalOrdersRanking': '总订单排名',\n    'OnTimeRateRanking': '准时率排名',\n    'GoodReviewRateRanking': '好评率排名',\n    'IncomeRanking': '收入排名',\n    // 英文字段名翻译\n    'IncomeRank': '收入排名',\n    'OnTimeRateRank': '准时率排名',\n    'GoodReviewRateRank': '好评率排名',\n    'TotalOrdersRank': '总订单排名'\n  };\n  return keyMap[key] || key;\n}\n\n// 获取排名徽章类型\nfunction getRankingBadgeType(rank: number) {\n  if (rank <= 3) return 'success';  // 前3名 - 绿色\n  if (rank <= 10) return 'warning'; // 4-10名 - 黄色\n  return 'info';                    // 其他 - 蓝色\n}\n\n// 订单状态映射（根据新的OrderStatus枚举）\nfunction getOrderStatusText(status: number) {\n  const statusMap = {\n    0: '未支付',\n    1: '已支付', \n    2: '用户确认收货',\n    3: '已经评价',\n    4: '售后中',\n    5: '售后结束',\n    6: '订单关闭',\n    7: '已派单',\n    8: '配送中'\n  };\n  return statusMap[status] || '未知状态';\n}\n\n// 订单状态颜色\nfunction getOrderStatusType(status: number) {\n  const typeMap = {\n    0: 'error',    // 未支付 - 红色\n    1: 'warning',  // 已支付 - 黄色\n    2: 'success',  // 用户确认收货 - 绿色\n    3: 'success',  // 已经评价 - 绿色\n    4: 'warning',  // 售后中 - 橙色\n    5: 'success',  // 售后结束 - 绿色\n    6: 'error',    // 订单关闭 - 红色\n    7: 'info',     // 已派单 - 蓝色\n    8: 'warning'   // 配送中 - 橙色\n  };\n  return typeMap[status] || 'default';\n}\n\n// 获取派单相关订单数据（只显示状态7和8的订单）\nasync function getAllOrdersData() {\n  try {\n    ordersLoading.value = true;\n    \n    console.log('🚀 开始获取派单相关订单数据');\n    const response = await getAllOrdersWithDetails();\n    console.log('📥 收到订单数据响应:', response);\n    \n    if (response) {\n      // API可能直接返回数组，也可能返回包含data属性的对象\n      const orders = Array.isArray(response) ? response : response.data || [];\n\n      if (Array.isArray(orders)) {\n        // 保存总订单数\n        totalOrdersCount.value = orders.length;\n\n        // 只显示状态为7（已派单）和8（配送中）的订单\n        const filteredOrders = orders.filter(order => {\n          const status = order.OrderStatus || order.orderStatus; // 兼容大小写\n          return status === 7 || status === 8;\n        });\n\n        ordersData.value = filteredOrders.map((order, index) => {\n          // --- Deep Data Normalization ---\n          const user = order.User || order.user || {};\n          const merchant = order.Merchant || order.merchant || {};\n          const address = order.Address || order.address || {};\n          const assignment = order.Assignment || order.assignment; // Can be null/undefined\n\n          const normalizedOrder = {\n            // Keep other properties from original order\n            ...order,\n\n            // Normalize root level properties\n            OrderId: order.OrderId || order.orderId,\n            OrderStatus: order.OrderStatus || order.orderStatus,\n            CreateAt: order.CreateAt || order.createAt,\n            \n            // Re-construct nested objects with consistent (PascalCase) keys\n            User: {\n              Nickname: user.Nickname || user.nickname,\n              UserId: user.UserId || user.userId\n            },\n            Merchant: {\n              MerchantName: merchant.MerchantName || merchant.merchantName,\n              Location: merchant.Location || merchant.location\n            },\n            Address: {\n              RecipientName: address.RecipientName || address.recipientName,\n              Address: address.Address || address.address\n            },\n            // Only normalize assignment if it exists\n            Assignment: assignment ? {\n              RiderName: assignment.RiderName || assignment.riderName,\n              RiderPhoneNumber: assignment.RiderPhoneNumber || assignment.riderPhoneNumber,\n              AcceptedStatus: assignment.AcceptedStatus || assignment.acceptedStatus\n            } : null,\n          };\n\n          return {\n            ...normalizedOrder,\n            index: index + 1,\n            statusText: getOrderStatusText(normalizedOrder.OrderStatus),\n            statusType: getOrderStatusType(normalizedOrder.OrderStatus)\n          };\n        });\n\n        message.success(`成功获取 ${filteredOrders.length} 条派单订单（总订单数：${totalOrdersCount.value}）`);\n      } else {\n        message.error('获取到的订单数据格式不正确');\n        ordersData.value = [];\n        totalOrdersCount.value = 0;\n      }\n    } else {\n      message.error('获取订单数据失败');\n      ordersData.value = [];\n      totalOrdersCount.value = 0;\n    }\n  } catch (error) {\n    message.error('获取订单数据失败: ' + error.message);\n    ordersData.value = [];\n    totalOrdersCount.value = 0;\n    console.error('Error fetching orders data:', error);\n  } finally {\n    ordersLoading.value = false;\n  }\n}\n\n// 显示订单排单列表\nfunction showOrdersAssignment() {\n  showOrdersModal.value = true;\n  getAllOrdersData();\n}\n\n\n\n// 格式化时间显示\nfunction formatTime(timeStr: string) {\n  if (!timeStr) return '未知时间';\n  \n  try {\n    const date = new Date(timeStr);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    \n    if (diffMins < 1) return '刚刚';\n    if (diffMins < 60) return `${diffMins}分钟前`;\n    if (diffMins < 1440) return `${Math.floor(diffMins / 60)}小时前`;\n    \n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString().slice(0, 5);\n  } catch {\n    return '时间格式错误';\n  }\n}\n\n// 组件挂载时获取数据\nonMounted(() => {\n  getRidersList();\n});\n</script>\n\n<template>\n  <div class=\"p-6 min-h-full bg-gradient-to-br from-orange-50 to-yellow-50\">\n    <!-- 页面标题 -->\n    <div class=\"mb-6\">\n      <h1 class=\"text-2xl font-bold text-gray-800 mb-2 flex items-center gap-2\">\n        <n-icon size=\"24\" color=\"#fa8c16\">\n          <BicycleOutline />\n        </n-icon>\n        骑手管理中心\n      </h1>\n      <p class=\"text-gray-600\">管理骑手信息和绩效排名</p>\n    </div>\n\n    <!-- 统计卡片区域 -->\n    <n-grid :cols=\"2\" :x-gap=\"16\" :y-gap=\"16\" class=\"mb-6\">\n      <n-gi>\n        <n-card :bordered=\"false\" class=\"shadow-sm hover:shadow-lg transition-shadow duration-300\">\n          <n-statistic\n            label=\"总骑手数\"\n            :value=\"riderStats.total\"\n            value-style=\"color: #fa8c16; font-weight: bold;\"\n          >\n            <template #prefix>\n              <n-icon size=\"20\" color=\"#fa8c16\">\n                <BicycleOutline />\n              </n-icon>\n            </template>\n          </n-statistic>\n        </n-card>\n      </n-gi>\n      <n-gi>\n        <n-card :bordered=\"false\" class=\"shadow-sm hover:shadow-lg transition-shadow duration-300\">\n          <n-statistic\n            label=\"在线骑手数\"\n            :value=\"riderStats.onlineCount\"\n            value-style=\"color: #fa8c16; font-weight: bold;\"\n          >\n            <template #prefix>\n              <n-icon size=\"20\" color=\"#fa8c16\">\n                <FlashOutline />\n              </n-icon>\n            </template>\n          </n-statistic>\n        </n-card>\n      </n-gi>\n    </n-grid>\n\n\n    <!-- 搜索筛选区域 -->\n    <n-card title=\"筛选条件\" class=\"mb-6 shadow-sm\" :bordered=\"false\">\n      <template #header-extra>\n        <n-space>\n          <n-button size=\"small\" @click=\"handleSearch\" type=\"primary\">\n            <template #icon>\n              <n-icon>\n                <SearchOutline />\n              </n-icon>\n            </template>\n            搜索\n          </n-button>\n          <n-button size=\"small\" @click=\"handleReset\">\n            <template #icon>\n              <n-icon>\n                <RefreshOutline />\n              </n-icon>\n            </template>\n            重置\n          </n-button>\n          <n-button size=\"small\" @click=\"showOrdersAssignment\" type=\"warning\">\n            <template #icon>\n              <n-icon>\n                <StatsChartOutline />\n              </n-icon>\n            </template>\n            订单派送情况\n          </n-button>\n        </n-space>\n      </template>\n      \n      <n-form :model=\"searchParams\" inline label-placement=\"left\" label-width=\"80\">\n        <n-form-item label=\"搜索条件\">\n          <n-input\n            v-model:value=\"searchParams.searchTerm\"\n            placeholder=\"请输入骑手姓名或手机号\"\n            clearable\n            style=\"width: 250px\"\n          />\n        </n-form-item>\n      </n-form>\n    </n-card>\n\n    <!-- 骑手列表 -->\n    <n-card :bordered=\"false\" class=\"shadow-sm\">\n      <template #header>\n        <div class=\"flex items-center gap-2\">\n          <n-icon size=\"18\" color=\"#fa8c16\">\n            <BicycleOutline />\n          </n-icon>\n          <span class=\"font-medium\">骑手列表</span>\n        </div>\n      </template>\n      \n      <template #header-extra>\n        <n-space align=\"center\">\n          <n-text depth=\"3\">\n            显示 {{ filteredTableData.length }} / {{ tableData.length }} 条记录\n          </n-text>\n          <n-button size=\"small\" @click=\"handleRefresh\" :loading=\"loading\">\n            <template #icon>\n              <n-icon>\n                <RefreshOutline />\n              </n-icon>\n            </template>\n            刷新\n          </n-button>\n        </n-space>\n      </template>\n      \n      <n-data-table\n        :columns=\"columns\"\n        :data=\"filteredTableData\"\n        :loading=\"loading\"\n        :pagination=\"{ pageSize: 10, showSizePicker: true, pageSizes: [10, 20, 50] }\"\n        flex-height\n        class=\"min-h-400px\"\n        :row-class-name=\"() => 'hover:bg-orange-50 transition-colors duration-200'\"\n      />\n    </n-card>\n    \n    <!-- 骑手详情弹窗 -->\n    <n-modal \n      v-model:show=\"showDetailModal\" \n      preset=\"card\" \n      style=\"width: 900px; max-height: 80vh;\" \n      class=\"rounded-2xl\"\n      :mask-closable=\"false\"\n    >\n      <template #header>\n        <div class=\"flex items-center gap-3\">\n          <n-avatar \n            :size=\"40\"\n            style=\"background: linear-gradient(135deg, #fa8c16, #faad14)\"\n          >\n            <n-icon size=\"20\">\n              <BicycleOutline />\n            </n-icon>\n          </n-avatar>\n          <div>\n            <h3 class=\"text-lg font-semibold text-gray-800\">\n              {{ riderDetail.name || riderDetail.Name || '骑手绩效信息' }}\n            </h3>\n            <p class=\"text-sm text-gray-500\">\n              ID: {{ riderDetail.riderId || riderDetail.RiderId || '-' }}\n            </p>\n          </div>\n        </div>\n      </template>\n\n      <div v-if=\"!detailLoading\" class=\"space-y-6\">\n        <!-- 绩效概览 -->\n        <div class=\"bg-gradient-to-r from-orange-50 to-yellow-50 p-4 rounded-lg\">\n          <h4 class=\"text-gray-800 font-medium mb-4 flex items-center gap-2\">\n            <n-icon color=\"#fa8c16\">\n              <TrophyOutline />\n            </n-icon>\n            {{ currentYear }}年{{ currentMonth }}月绩效概览\n          </h4>\n          \n          <n-grid :cols=\"4\" :x-gap=\"20\" v-if=\"Object.keys(riderRanking).length > 0\">\n            <n-gi v-for=\"(value, key) in riderRanking\" :key=\"key\">\n              <div class=\"text-center\">\n                <div class=\"text-2xl font-bold\" :class=\"{\n                  'text-yellow-600': getRankingBadgeType(value) === 'success',\n                  'text-orange-600': getRankingBadgeType(value) === 'warning',\n                  'text-blue-600': getRankingBadgeType(value) === 'info'\n                }\">\n                  {{ value }}\n                </div>\n                <div class=\"text-sm text-gray-600\">{{ formatRankingKey(key) }}</div>\n              </div>\n            </n-gi>\n          </n-grid>\n          \n          <div v-else class=\"text-center py-8\">\n            <n-icon size=\"48\" color=\"#d9d9d9\">\n              <StatsChartOutline />\n            </n-icon>\n            <p class=\"text-gray-500 mt-2\">暂无当月绩效数据</p>\n          </div>\n        </div>\n\n        <n-divider />\n\n        <!-- 详细信息 -->\n        <n-grid :cols=\"2\" :x-gap=\"24\" :y-gap=\"20\">\n          <!-- 基本信息 -->\n          <n-gi>\n            <n-card title=\"基本信息\" size=\"small\" class=\"h-full\">\n              <template #header-extra>\n                <n-icon color=\"#fa8c16\">\n                  <PersonOutline />\n                </n-icon>\n              </template>\n              \n              <div class=\"space-y-4\">\n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">骑手ID</span>\n                  <n-text code style=\"word-break: break-all; max-width: 200px;\">\n                    {{ riderDetail.riderId || riderDetail.RiderId || '-' }}\n                  </n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">姓名</span>\n                  <n-text strong>{{ riderDetail.name || riderDetail.Name || '未设置' }}</n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium flex items-center gap-2\">\n                    <n-icon size=\"16\" color=\"#1890ff\">\n                      <CallOutline />\n                    </n-icon>\n                    手机号\n                  </span>\n                  <n-text>{{ riderDetail.phoneNumber || riderDetail.PhoneNumber || '未设置' }}</n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2\">\n                  <span class=\"text-gray-600 font-medium flex items-center gap-2\">\n                    <n-icon size=\"16\" color=\"#52c41a\">\n                      <CarOutline />\n                    </n-icon>\n                    车牌号\n                  </span>\n                  <n-text>{{ riderDetail.vehicleNumber || riderDetail.VehicleNumber || '未登记' }}</n-text>\n                </div>\n              </div>\n            </n-card>\n          </n-gi>\n          \n          <!-- 账户信息 -->\n          <n-gi>\n            <n-card title=\"账户关联\" size=\"small\" class=\"h-full\">\n              <template #header-extra>\n                <n-icon color=\"#722ed1\">\n                  <PersonOutline />\n                </n-icon>\n              </template>\n              \n              <div class=\"space-y-4\">\n                <div class=\"flex justify-between items-start py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">关联用户ID</span>\n                  <n-text style=\"word-break: break-all; max-width: 200px;\">\n                    {{ riderDetail.applicationUserId || riderDetail.ApplicationUserId || '未关联' }}\n                  </n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">账户状态</span>\n                  <n-badge \n                    :value=\"riderDetail.applicationUserId ? '已关联' : '未关联'\" \n                    :type=\"riderDetail.applicationUserId ? 'success' : 'warning'\"\n                  />\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2\">\n                  <span class=\"text-gray-600 font-medium\">车辆状态</span>\n                  <n-badge \n                    :value=\"riderDetail.vehicleNumber ? '已登记' : '未登记'\" \n                    :type=\"riderDetail.vehicleNumber ? 'success' : 'warning'\"\n                  />\n                </div>\n              </div>\n            </n-card>\n          </n-gi>\n        </n-grid>\n\n      </div>\n      \n      <!-- 加载状态 -->\n      <div v-else class=\"flex justify-center items-center h-80\">\n        <n-spin size=\"large\">\n          <template #description>\n            <div class=\"text-center mt-4\">\n              <p class=\"text-gray-600\">正在加载骑手信息...</p>\n              <p class=\"text-sm text-gray-400 mt-1\">请稍候片刻</p>\n            </div>\n          </template>\n        </n-spin>\n      </div>\n    </n-modal>\n\n    <!-- 订单排单展示弹窗 -->\n    <n-modal \n      v-model:show=\"showOrdersModal\" \n      preset=\"card\" \n      style=\"width: 1200px; max-height: 85vh;\" \n      class=\"rounded-2xl\"\n      :mask-closable=\"false\"\n    >\n      <template #header>\n        <div class=\"flex items-center gap-3\">\n          <n-avatar \n            :size=\"40\"\n            style=\"background: linear-gradient(135deg, #fa8c16, #faad14)\"\n          >\n            <n-icon size=\"20\">\n              <StatsChartOutline />\n            </n-icon>\n          </n-avatar>\n          <div>\n            <h3 class=\"text-lg font-semibold text-gray-800\">\n              派单状态展示\n            </h3>\n            <p class=\"text-sm text-gray-500\">\n              实时查看已派单和配送中的订单\n            </p>\n          </div>\n        </div>\n      </template>\n\n      <div v-if=\"!ordersLoading\" class=\"space-y-4\">\n        <!-- 订单统计概览 -->\n        <div class=\"bg-gradient-to-r from-orange-50 to-yellow-50 p-4 rounded-lg\">\n          <h4 class=\"text-gray-800 font-medium mb-4 flex items-center gap-2\">\n            <n-icon color=\"#fa8c16\">\n              <StatsChartOutline />\n            </n-icon>\n            派单状态统计\n          </h4>\n          \n          <n-grid :cols=\"3\" :x-gap=\"16\">\n            <!-- 总订单数 -->\n            <n-gi>\n              <div class=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <div class=\"text-2xl font-bold text-purple-600\">\n                  {{ totalOrdersCount }}\n                </div>\n                <div class=\"text-sm text-gray-600 mt-2\">总订单数</div>\n              </div>\n            </n-gi>\n            \n            <!-- 派单状态统计 -->\n            <n-gi v-for=\"status in [7, 8]\" :key=\"status\">\n              <div class=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                <div class=\"text-2xl font-bold\" :class=\"{\n                  'text-blue-600': status === 7,\n                  'text-orange-600': status === 8\n                }\">\n                  {{ ordersData.filter(order => order.OrderStatus === status).length }}\n                </div>\n                <div class=\"text-sm text-gray-600 mt-2\">{{ getOrderStatusText(status) }}</div>\n              </div>\n            </n-gi>\n          </n-grid>\n        </div>\n\n        <!-- 订单列表 -->\n        <n-data-table\n          :columns=\"ordersColumns\"\n          :data=\"ordersData\"\n          :loading=\"ordersLoading\"\n          :pagination=\"{ pageSize: 15, showSizePicker: true, pageSizes: [10, 15, 20, 30] }\"\n          flex-height\n          style=\"min-height: 400px;\"\n          :row-class-name=\"() => 'hover:bg-orange-50 transition-colors duration-200'\"\n        />\n      </div>\n      \n      <!-- 加载状态 -->\n      <div v-else class=\"flex justify-center items-center h-80\">\n        <n-spin size=\"large\">\n          <template #description>\n            <div class=\"text-center mt-4\">\n              <p class=\"text-gray-600\">正在加载订单数据...</p>\n              <p class=\"text-sm text-gray-400 mt-1\">请稍候片刻</p>\n            </div>\n          </template>\n        </n-spin>\n      </div>\n    </n-modal>\n  </div>\n</template>\n\n<style scoped>\n/* 骑手管理页面样式 */\n.rider-manage-container {\n  background: linear-gradient(135deg, #fff7e6 0%, #fff2e8 100%);\n  min-height: 100vh;\n}\n\n/* 统计卡片动画 */\n.n-card {\n  transition: all 0.3s ease;\n}\n\n.n-card:hover {\n  transform: translateY(-2px);\n}\n\n/* 表格行悬停效果 */\n:deep(.n-data-table-tr:hover) {\n  background-color: rgba(250, 140, 22, 0.05) !important;\n}\n\n/* 骑手状态指示器 */\n.rider-status {\n  position: relative;\n}\n\n.rider-status::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: -8px;\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  transform: translateY(-50%);\n}\n\n.status-online::before {\n  background-color: #fa8c16;\n  box-shadow: 0 0 0 2px rgba(250, 140, 22, 0.2);\n  animation: pulse-orange 2s infinite;\n}\n\n.status-offline::before {\n  background-color: #d9d9d9;\n  box-shadow: 0 0 0 2px rgba(217, 217, 217, 0.2);\n}\n\n.status-busy::before {\n  background-color: #ff4d4f;\n  box-shadow: 0 0 0 2px rgba(255, 77, 79, 0.2);\n  animation: pulse-red 2s infinite;\n}\n\n/* 骑手头像样式 */\n.rider-avatar {\n  background: linear-gradient(135deg, #fa8c16 0%, #faad14 100%);\n  border: 2px solid #fff;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 搜索表单优化 */\n:deep(.n-form-item-label__text) {\n  font-weight: 500;\n  color: #4a5568;\n}\n\n/* 按钮圆角优化 */\n:deep(.n-button) {\n  border-radius: 8px;\n  font-weight: 500;\n}\n\n/* 渐变按钮特殊样式 */\n.gradient-button {\n  background: linear-gradient(135deg, #fa8c16, #faad14);\n  border: none;\n  color: white;\n}\n\n.gradient-button:hover {\n  background: linear-gradient(135deg, #e6780e, #e89f13);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 8px rgba(250, 140, 22, 0.3);\n}\n\n/* 输入框圆角优化 */\n:deep(.n-input) {\n  border-radius: 8px;\n}\n\n:deep(.n-select) {\n  border-radius: 8px;\n}\n\n/* 数据表格优化 */\n:deep(.n-data-table) {\n  border-radius: 12px;\n  overflow: hidden;\n}\n\n:deep(.n-data-table-th) {\n  background-color: #fff7e6;\n  font-weight: 600;\n  color: #4a5568;\n}\n\n/* 状态标签优化 */\n:deep(.n-tag) {\n  border-radius: 12px;\n  font-weight: 500;\n}\n\n/* 模态框优化 */\n:deep(.n-modal) {\n  border-radius: 16px;\n  overflow: hidden;\n}\n\n/* 加载动画优化 */\n:deep(.n-spin) {\n  color: #fa8c16;\n}\n\n/* 绩效排名样式 */\n.performance-rank {\n  transition: all 0.3s ease;\n}\n\n.performance-rank:hover {\n  background-color: rgba(250, 140, 22, 0.1);\n  transform: scale(1.02);\n}\n\n/* 排名徽章特殊样式 */\n.rank-badge-gold {\n  background: linear-gradient(135deg, #ffd700, #ffed4a);\n  color: #8b5a00;\n}\n\n.rank-badge-silver {\n  background: linear-gradient(135deg, #c0c0c0, #e5e5e5);\n  color: #666;\n}\n\n.rank-badge-bronze {\n  background: linear-gradient(135deg, #cd7f32, #daa520);\n  color: #654321;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .p-6 {\n    padding: 1rem;\n  }\n  \n  .n-grid[cols=\"5\"] {\n    grid-div-columns: repeat(2, 1fr);\n  }\n  \n  .n-modal {\n    width: 95vw !important;\n    max-width: none !important;\n  }\n}\n\n/* 动画效果 */\n@keyframes pulse-orange {\n  0% {\n    box-shadow: 0 0 0 0 rgba(250, 140, 22, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 4px rgba(250, 140, 22, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(250, 140, 22, 0);\n  }\n}\n\n@keyframes pulse-red {\n  0% {\n    box-shadow: 0 0 0 0 rgba(255, 77, 79, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 4px rgba(255, 77, 79, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(255, 77, 79, 0);\n  }\n}\n\n/* 页面进入动画 */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.fade-in-up {\n  animation: fadeInUp 0.6s ease-out;\n}\n\n\n\n/* 绩效卡片特效 */\n.performance-card {\n  position: relative;\n  overflow: hidden;\n  background: linear-gradient(135deg, #fff7e6, #fff2e8);\n}\n\n.performance-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  background: conic-gradient(from 0deg, transparent, rgba(250, 140, 22, 0.1), transparent);\n  animation: rotate 4s linear infinite;\n  pointer-events: none;\n}\n\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style> "],"names":["getAllOrdersWithDetails","get","_hoisted_1","CarOutline","defineComponent","_ctx","_cache","_openBlock","_createElementBlock","_createStaticVNode","FlashOutline","_createElementVNode","message","useMessage","loading","ref","tableData","ordersLoading","ordersData","showOrdersModal","totalOrdersCount","pagination","page","pageSize","totalCount","totalPages","searchParams","searchTerm","riderStats","computed","total","value","length","onlineCount","filter","rider","status","filteredTableData","toLowerCase","name","includes","phoneNumber","showDetailModal","detailLoading","riderDetail","riderRanking","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","getRidersList","params","console","log","response","fetchRidersList","data","riders","paginationInfo","Riders","Array","isArray","Pagination","map","index","riderId","RiderId","Name","PhoneNumber","vehicleNumber","VehicleNumber","applicationUserId","ApplicationUserId","Page","PageSize","TotalCount","TotalPages","Math","ceil","error","handleSearch","success","handleReset","info","handleRefresh","ordersColumns","key","title","align","width","render","row","_createVNode2","_resolveComponent","default","OrderId","slice","statusType","statusText","User","Nickname","_createTextVNode2","UserId","Merchant","MerchantName","Location","Assignment","RiderName","RiderPhoneNumber","AcceptedStatus","Address","RecipientName","CreateAt","toLocaleString","columns","backgroundColor","BicycleOutline","CallOutline","PersonOutline","onClick","handleViewDetail","TrophyOutline","detailResponse","rankingResponse","Promise","allSettled","fetchRiderInfo","fetchRiderPerformanceRanking","formatRankingKey","getRankingBadgeType","rank","getOrderStatusText","getOrderStatusType","getAllOrdersData","orders","filteredOrders","order","OrderStatus","orderStatus","user","merchant","address","assignment","normalizedOrder","orderId","createAt","nickname","userId","merchantName","location","recipientName","riderName","riderPhoneNumber","acceptedStatus","showOrdersAssignment","onMounted","_hoisted_2","_hoisted_3","_createVNode","_unref","NIcon","size","color","class","NGrid","cols","NGi","NCard","bordered","NStatistic","label","prefix","NSpace","NButton","type","icon","SearchOutline","RefreshOutline","StatsChartOutline","NForm","model","inline","NFormItem","NInput","$event","placeholder","clearable","style","header","_hoisted_4","NText","depth","_toDisplayString","NDataTable","showSizePicker","pageSizes","row-class-name","NModal","show","preset","_hoisted_5","NAvatar","_hoisted_6","_hoisted_7","_hoisted_25","NSpin","description","_hoisted_8","_hoisted_9","_hoisted_10","_createTextVNode","Object","keys","_createBlock","_Fragment","_renderList","_hoisted_11","_hoisted_12","_hoisted_13","NDivider","_hoisted_14","_hoisted_15","code","_hoisted_16","strong","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","NBadge","_hoisted_24","_hoisted_26","_hoisted_34","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33"],"mappings":"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","x_google_ignoreList":[1,2]}