{"version":3,"file":"index-kfaf63CT.js","sources":["../../node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/compareAsc.mjs","../../node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/_lib/getRoundingMethod.mjs","../../node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/formatDistanceStrict.mjs","../../node_modules/.pnpm/date-fns@3.6.0/node_modules/date-fns/fromUnixTime.mjs","../../node_modules/.pnpm/naive-ui@2.42.0_vue@3.5.17_typescript@5.8.3_/node_modules/naive-ui/es/time/src/Time.mjs","../../src/api/order.ts","../../node_modules/.pnpm/@vicons+ionicons5@0.13.0/node_modules/@vicons/ionicons5/es/CarOutline.js","../../src/components/OrderOverview.vue","../../src/views/rider-manage/index.vue"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { compareAsc } from \"./compareAsc.mjs\";\nimport {\n  millisecondsInMinute,\n  minutesInDay,\n  minutesInMonth,\n  minutesInYear,\n} from \"./constants.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link formatDistanceStrict} function options.\n */\n\n/**\n * The unit used to format the distance in {@link formatDistanceStrict}.\n */\n\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * const result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport function formatDistanceStrict(date, baseDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const comparison = compareAsc(date, baseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  let dateLeft;\n  let dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(baseDate);\n    dateRight = toDate(date);\n  } else {\n    dateLeft = toDate(date);\n    dateRight = toDate(baseDate);\n  }\n\n  const roundingMethod = getRoundingMethod(options?.roundingMethod ?? \"round\");\n\n  const milliseconds = dateRight.getTime() - dateLeft.getTime();\n  const minutes = milliseconds / millisecondsInMinute;\n\n  const timezoneOffset =\n    getTimezoneOffsetInMilliseconds(dateRight) -\n    getTimezoneOffsetInMilliseconds(dateLeft);\n\n  // Use DST-normalized difference in minutes for years, months and days;\n  // use regular difference in minutes for hours, minutes and seconds.\n  const dstNormalizedMinutes =\n    (milliseconds - timezoneOffset) / millisecondsInMinute;\n\n  const defaultUnit = options?.unit;\n  let unit;\n  if (!defaultUnit) {\n    if (minutes < 1) {\n      unit = \"second\";\n    } else if (minutes < 60) {\n      unit = \"minute\";\n    } else if (minutes < minutesInDay) {\n      unit = \"hour\";\n    } else if (dstNormalizedMinutes < minutesInMonth) {\n      unit = \"day\";\n    } else if (dstNormalizedMinutes < minutesInYear) {\n      unit = \"month\";\n    } else {\n      unit = \"year\";\n    }\n  } else {\n    unit = defaultUnit;\n  }\n\n  // 0 up to 60 seconds\n  if (unit === \"second\") {\n    const seconds = roundingMethod(milliseconds / 1000);\n    return locale.formatDistance(\"xSeconds\", seconds, localizeOptions);\n\n    // 1 up to 60 mins\n  } else if (unit === \"minute\") {\n    const roundedMinutes = roundingMethod(minutes);\n    return locale.formatDistance(\"xMinutes\", roundedMinutes, localizeOptions);\n\n    // 1 up to 24 hours\n  } else if (unit === \"hour\") {\n    const hours = roundingMethod(minutes / 60);\n    return locale.formatDistance(\"xHours\", hours, localizeOptions);\n\n    // 1 up to 30 days\n  } else if (unit === \"day\") {\n    const days = roundingMethod(dstNormalizedMinutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 up to 12 months\n  } else if (unit === \"month\") {\n    const months = roundingMethod(dstNormalizedMinutes / minutesInMonth);\n    return months === 12 && defaultUnit !== \"month\"\n      ? locale.formatDistance(\"xYears\", 1, localizeOptions)\n      : locale.formatDistance(\"xMonths\", months, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const years = roundingMethod(dstNormalizedMinutes / minutesInYear);\n    return locale.formatDistance(\"xYears\", years, localizeOptions);\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceStrict;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param unixTime - The given Unix timestamp (in seconds)\n *\n * @returns The date\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport function fromUnixTime(unixTime) {\n  return toDate(unixTime * 1000);\n}\n\n// Fallback for modularized imports:\nexport default fromUnixTime;\n","import { format, formatDistanceStrict, fromUnixTime } from 'date-fns';\nimport { formatInTimeZone } from 'date-fns-tz';\nimport { computed, createTextVNode, defineComponent, h } from 'vue';\nimport { useLocale } from \"../../_mixins/index.mjs\";\nexport const timeProps = {\n  time: {\n    type: [Number, Date],\n    default: undefined // For unix or non unix mode, it should be different default value\n  },\n  type: {\n    type: String,\n    default: 'datetime'\n  },\n  to: {\n    type: [Number, Date],\n    default: undefined // the same as `time` prop\n  },\n  unix: Boolean,\n  format: String,\n  text: Boolean,\n  timeZone: String\n};\nexport default defineComponent({\n  name: 'Time',\n  props: timeProps,\n  setup(props) {\n    const now = Date.now();\n    const {\n      localeRef,\n      dateLocaleRef\n    } = useLocale('Time');\n    const mergedFormatRef = computed(() => {\n      const {\n        timeZone\n      } = props;\n      if (timeZone) {\n        return (time, _format, options) => {\n          return formatInTimeZone(time, timeZone, _format, options);\n        };\n      }\n      return format;\n    });\n    const dateFnsOptionsRef = computed(() => {\n      return {\n        locale: dateLocaleRef.value.locale\n      };\n    });\n    const mergedTimeRef = computed(() => {\n      const {\n        time\n      } = props;\n      if (props.unix) {\n        if (time === undefined) return now;\n        return fromUnixTime(typeof time === 'number' ? time : time.valueOf());\n      }\n      return time !== null && time !== void 0 ? time : now;\n    });\n    const mergedToRef = computed(() => {\n      const {\n        to\n      } = props;\n      if (props.unix) {\n        if (to === undefined) return now;\n        return fromUnixTime(typeof to === 'number' ? to : to.valueOf());\n      }\n      return to !== null && to !== void 0 ? to : now;\n    });\n    const renderedTimeRef = computed(() => {\n      if (props.format) {\n        return mergedFormatRef.value(mergedTimeRef.value, props.format, dateFnsOptionsRef.value);\n      } else if (props.type === 'date') {\n        return mergedFormatRef.value(mergedTimeRef.value, localeRef.value.dateFormat, dateFnsOptionsRef.value);\n      } else if (props.type === 'datetime') {\n        return mergedFormatRef.value(mergedTimeRef.value, localeRef.value.dateTimeFormat, dateFnsOptionsRef.value);\n      } else {\n        return formatDistanceStrict(mergedTimeRef.value, mergedToRef.value, {\n          addSuffix: true,\n          locale: dateLocaleRef.value.locale\n        });\n      }\n    });\n    return {\n      renderedTime: renderedTimeRef\n    };\n  },\n  render() {\n    return this.text ? createTextVNode(this.renderedTime) : h('time', [this.renderedTime]);\n  }\n});","/**\n * @author luohan\n * 订单管理API接口\n */\nimport { get, post, put } from '../utils/request.js';\n\n/**\n * 获取所有商家列表\n * @param params - 查询参数\n */\nexport function getAllMerchants(params: any = {}) {\n  console.log('获取所有商家列表', params);\n  return get('/api/merchants', params);\n}\n\n/**\n * 获取指定商家的订单列表\n * @param merchantId - 商家ID\n * @param params - 查询参数\n */\nexport function getMerchantOrders(merchantId: string, params: any = {}) {\n  console.log(`获取商家 ${merchantId} 的订单列表`, params);\n  return get(`/api/merchants/${merchantId}/orders`, params);\n}\n\n/**\n * 获取待派单的订单列表\n * @param params - 查询参数 {page, pageSize}\n */\nexport async function getPendingOrders(params: any = {}) {\n  console.log('获取待派单订单列表', params);\n  const { page = 1, pageSize = 50 } = params;\n  \n  try {\n    // 1. 获取所有商家列表\n    const merchantsResponse = await getAllMerchants({ page: 1, size: 1000 });\n    const merchants = merchantsResponse.data || [];\n    \n    if (!merchants.length) {\n      return { data: [], total: 0 };\n    }\n    \n    // 2. 为每个商家获取待派单订单ID（orderStatus=1表示已支付待派单）\n    const allOrderIds = [];\n    for (const merchant of merchants) {\n      try {\n        const ordersResponse = await getMerchantOrders(merchant.merchantId, {\n          orderStatus: 1, // 已支付待派单\n          page: 1,\n          size: 1000\n        });\n        const orderIds = ordersResponse.data || [];\n        allOrderIds.push(...orderIds);\n      } catch (error) {\n        console.warn(`获取商家 ${merchant.merchantId} 订单失败:`, error);\n      }\n    }\n    \n    if (!allOrderIds.length) {\n      return { data: [], total: 0 };\n    }\n    \n    // 3. 分页处理订单ID\n    const startIndex = (page - 1) * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedOrderIds = allOrderIds.slice(startIndex, endIndex);\n    \n    // 4. 批量获取订单详情\n    const orderDetailsResponse = await getBatchOrderDetails(paginatedOrderIds);\n    const orderDetails = orderDetailsResponse.data || [];\n    \n    return {\n      data: orderDetails,\n      total: allOrderIds.length,\n      page,\n      pageSize\n    };\n  } catch (error) {\n    console.error('获取待派单订单失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 自动派单API - 分配订单给最近的在线骑手\n * @param orderId - 订单ID\n */\nexport function autoAssignOrder(orderId: string) {\n  console.log(`自动派单，订单ID: ${orderId}`);\n  return post(`/api/OrderAssignment/auto-assign/${orderId}`);\n}\n\n/**\n * 手动派单API - 分配订单给指定骑手\n * @param orderAssignmentData - 派单数据 {orderId, riderId}\n */\nexport function manualAssignOrder(orderAssignmentData: {orderId: string, riderId: string}) {\n  console.log('手动派单', orderAssignmentData);\n  return post('/api/OrderAssignment/manual-assign', orderAssignmentData);\n}\n\n/**\n * 获取订单分配信息\n * @param orderId - 订单ID\n */\nexport function getOrderAssignment(orderId: string) {\n  console.log(`获取订单分配信息，订单ID: ${orderId}`);\n  return get(`/api/OrderAssignment/order/${orderId}/assignment`);\n}\n\n/**\n * 获取骑手当前分配的订单列表\n * @param riderId - 骑手ID\n */\nexport function getRiderAssignments(riderId: string) {\n  console.log(`获取骑手分配订单，骑手ID: ${riderId}`);\n  return get(`/api/OrderAssignment/rider/${riderId}/assignments`);\n}\n\n/**\n * 更新订单状态\n * @param statusData - 状态更新数据 {orderId, newStatus, remark}\n */\nexport function updateOrderStatus(statusData: {orderId: string, newStatus: number, remark?: string}) {\n  console.log('更新订单状态', statusData);\n  return put('/api/OrderAssignment/update-status', statusData);\n}\n\n/**\n * 获取所有进行中的订单状态（用于实时监控）\n * @param params - 查询参数\n */\nexport async function getAllActiveOrders(params: any = {}) {\n  console.log('获取所有进行中的订单状态', params);\n  try {\n    // 获取所有活跃状态的订单 (状态 3-6: 已接单到已完成)\n    const response = await get('/api/orders', {\n      status: [3, 4, 5, 6].join(','), // 多状态查询\n      pageSize: 100, // 获取更多数据\n      ...params\n    });\n    \n    console.log('获取活跃订单响应:', response);\n    return response;\n  } catch (error) {\n    console.error('获取活跃订单失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 获取订单列表（支持多种状态筛选）\n * 注意：后端没有直接的/api/orders接口，这里调用getAllMerchants然后聚合订单\n * @param params - 查询参数 {status, page, pageSize, searchTerm}\n */\nexport async function getOrderList(params: any = {}) {\n  console.log('获取订单列表', params);\n  \n  try {\n    // 由于后端没有直接的订单列表API，我们需要通过商家来获取订单\n    const merchantsResponse = await getAllMerchants({ page: 1, size: 100 });\n    console.log('商家API响应:', merchantsResponse);\n    \n    // 后端返回格式: { data: [...], message: \"...\", success: true }\n    const merchants = merchantsResponse?.data || [];\n    \n    if (!merchants.length) {\n      return { data: [], total: 0 };\n    }\n    \n    // 获取第一个商家的订单作为示例（简化处理）\n    const firstMerchant = merchants[0];\n    const merchantId = firstMerchant.MerchantId || firstMerchant.merchantId;\n    \n    const ordersResponse = await getMerchantOrders(merchantId, {\n      orderStatus: params.status,\n      page: params.page || 1,\n      size: params.pageSize || 20\n    });\n    \n    console.log('商家订单API响应:', ordersResponse);\n    \n    return {\n      data: ordersResponse?.data || [],\n      total: ordersResponse?.data?.length || 0\n    };\n  } catch (error) {\n    console.error('获取订单列表失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 获取订单详情\n * @param orderId - 订单ID\n */\nexport function getOrderDetail(orderId: string) {\n  console.log(`获取订单详情，订单ID: ${orderId}`);\n  return get(`/api/orders/${orderId}`);\n}\n\n/**\n * 批量获取订单详情\n * @param orderIds - 订单ID列表\n */\nexport async function getBatchOrderDetails(orderIds: string[]) {\n  console.log(`批量获取订单详情，订单数量: ${orderIds.length}`);\n  \n  try {\n    const orderDetails = [];\n    for (const orderId of orderIds) {\n      try {\n        const response = await getOrderDetail(orderId);\n        if (response.data) {\n          orderDetails.push(response.data);\n        }\n      } catch (error) {\n        console.warn(`获取订单 ${orderId} 详情失败:`, error);\n      }\n    }\n    return { data: orderDetails };\n  } catch (error) {\n    console.error('批量获取订单详情失败:', error);\n    throw error;\n  }\n}\n\n// 订单状态枚举\nexport enum OrderStatus {\n  Pending = 0,      // 待支付\n  Paid = 1,         // 已支付（待派单）\n  Assigned = 2,     // 已分配（待接单）\n  Accepted = 3,     // 已接单（准备中）\n  Preparing = 4,    // 商家准备中\n  PickedUp = 5,     // 已取餐（配送中）\n  Delivered = 6,    // 已送达\n  Completed = 7,    // 已完成\n  Cancelled = 8,    // 已取消\n  Refunded = 9      // 已退款\n}\n\n// 订单状态显示文本映射\nexport const OrderStatusText = {\n  [OrderStatus.Pending]: '待支付',\n  [OrderStatus.Paid]: '已支付',\n  [OrderStatus.Assigned]: '已分配',\n  [OrderStatus.Accepted]: '已接单',\n  [OrderStatus.Preparing]: '准备中',\n  [OrderStatus.PickedUp]: '配送中',\n  [OrderStatus.Delivered]: '已送达',\n  [OrderStatus.Completed]: '已完成',\n  [OrderStatus.Cancelled]: '已取消',\n  [OrderStatus.Refunded]: '已退款'\n};\n\n// 订单状态颜色映射\nexport const OrderStatusColor = {\n  [OrderStatus.Pending]: 'warning',\n  [OrderStatus.Paid]: 'info',\n  [OrderStatus.Assigned]: 'warning',\n  [OrderStatus.Accepted]: 'success',\n  [OrderStatus.Preparing]: 'info',\n  [OrderStatus.PickedUp]: 'success',\n  [OrderStatus.Delivered]: 'success',\n  [OrderStatus.Completed]: 'success',\n  [OrderStatus.Cancelled]: 'error',\n  [OrderStatus.Refunded]: 'error'\n};\n\n/**\n * 获取骑手当前配送订单状态\n * @param riderId - 骑手ID\n */\nexport function getRiderDeliveryStatus(riderId: string) {\n  console.log(`获取骑手配送状态，骑手ID: ${riderId}`);\n  return get(`/api/orders/rider/${riderId}/delivery-status`);\n}\n\n/**\n * 获取骑手配送订单列表（包含详细状态）\n * @param riderId - 骑手ID\n * @param params - 查询参数 {status, page, pageSize}\n */\nexport function getRiderDeliveryOrders(riderId: string, params = {}) {\n  console.log(`获取骑手配送订单列表，骑手ID: ${riderId}`, params);\n  return get(`/api/orders/rider/${riderId}/delivery-orders`, params);\n}\n\n/**\n * 获取骑手实时配送统计\n * @param riderId - 骑手ID\n */\nexport function getRiderDeliveryStats(riderId: string) {\n  console.log(`获取骑手配送统计，骑手ID: ${riderId}`);\n  return get(`/api/orders/rider/${riderId}/delivery-stats`);\n}\n\n/**\n * 批量获取多个骑手的配送状态\n * @param riderIds - 骑手ID列表\n */\nexport function getBatchRiderDeliveryStatus(riderIds: string[]) {\n  console.log(`批量获取骑手配送状态，骑手数量: ${riderIds.length}`);\n  return post('/api/orders/riders/batch-delivery-status', { riderIds });\n}\n\n// 配送状态枚举（针对骑手的状态）\nexport enum DeliveryStatus {\n  NoOrders = 0,        // 无订单\n  WaitingPickup = 1,   // 等待取餐\n  OnTheWay = 2,        // 配送途中\n  Delivered = 3,       // 已送达\n  Multiple = 4         // 多单配送\n}\n\n// 配送状态显示文本\nexport const DeliveryStatusText = {\n  [DeliveryStatus.NoOrders]: '无订单',\n  [DeliveryStatus.WaitingPickup]: '等待取餐',\n  [DeliveryStatus.OnTheWay]: '配送途中',\n  [DeliveryStatus.Delivered]: '已送达',\n  [DeliveryStatus.Multiple]: '多单配送'\n};\n\n// 配送状态颜色\nexport const DeliveryStatusColor = {\n  [DeliveryStatus.NoOrders]: 'default',\n  [DeliveryStatus.WaitingPickup]: 'warning',\n  [DeliveryStatus.OnTheWay]: 'processing',\n  [DeliveryStatus.Delivered]: 'success',\n  [DeliveryStatus.Multiple]: 'purple'\n};\n\n/**\n * 获取订单分配总览数据（用于管理后台总览页面）\n * 包含订单统计和所有骑手的订单分配状态\n */\nexport async function getOrderAssignmentOverview() {\n  console.log('获取订单分配总览数据');\n  \n  try {\n    // 1. 获取所有骑手列表\n    const ridersResponse = await get('/api/riders', { page: 1, size: 1000 });\n    console.log('获取骑手列表响应:', ridersResponse);\n    \n    // 检查响应数据格式\n    let riders = [];\n    if (ridersResponse?.data?.Riders) {\n      riders = ridersResponse.data.Riders; // 后端返回格式为 {data: {Riders: [...], Pagination: {...}}}\n    } else if (ridersResponse?.data && Array.isArray(ridersResponse.data)) {\n      riders = ridersResponse.data; // 如果直接是数组\n    } else {\n      console.warn('骑手数据格式不符合预期:', ridersResponse);\n      riders = [];\n    }\n    \n    // 2. 获取订单统计\n    const orderStats = await getOrderStatistics();\n    \n    // 3. 简化骑手数据处理，只获取前20个骑手的详细数据（避免大量并发请求）\n    const limitedRiders = riders.slice(0, 20);\n    const ridersWithOrders = await Promise.all(\n      limitedRiders.map(async (rider) => {\n        try {\n          // 获取骑手当前分配的订单\n          const assignmentsResponse = await getRiderAssignments(rider.RiderId || rider.riderId);\n          const assignments = assignmentsResponse?.data || [];\n          \n          // 简化处理：不再调用配送统计API，减少并发请求\n          const todayCompleted = Math.floor(Math.random() * 10); // 临时数据\n          const avgDeliveryTime = Math.floor(Math.random() * 20) + 15; // 临时数据\n          \n          return {\n            riderId: rider.RiderId || rider.riderId,\n            riderName: rider.Name || rider.name || `骑手${rider.RiderId || rider.riderId}`,\n            status: getRandomRiderStatus(), // 临时随机状态\n            currentOrders: Array.isArray(assignments) ? assignments.length : 0,\n            todayCompleted,\n            avgDeliveryTime,\n            lastOrderTime: Array.isArray(assignments) && assignments.length > 0 ? assignments[0]?.assignedAt : null,\n            location: '位置未知' // 临时数据\n          };\n        } catch (error) {\n          console.warn(`获取骑手 ${rider.RiderId || rider.riderId} 数据失败:`, error);\n          return {\n            riderId: rider.RiderId || rider.riderId,\n            riderName: rider.Name || rider.name || `骑手${rider.RiderId || rider.riderId}`,\n            status: '离线',\n            currentOrders: 0,\n            todayCompleted: 0,\n            avgDeliveryTime: 0,\n            lastOrderTime: null,\n            location: '位置未知'\n          };\n        }\n      })\n    );\n    \n    // 4. 为其余骑手填充基本信息（不调用详细API）\n    const remainingRiders = riders.slice(20).map(rider => ({\n      riderId: rider.RiderId || rider.riderId,\n      riderName: rider.Name || rider.name || `骑手${rider.RiderId || rider.riderId}`,\n      status: '离线',\n      currentOrders: 0,\n      todayCompleted: 0,\n      avgDeliveryTime: 0,\n      lastOrderTime: null,\n      location: '位置未知'\n    }));\n    \n    const allRidersOverview = [...ridersWithOrders, ...remainingRiders];\n    \n    return {\n      orderStats,\n      ridersOverview: allRidersOverview\n    };\n  } catch (error) {\n    console.error('获取订单分配总览失败:', error);\n    throw error;\n  }\n}\n\n/**\n * 获取订单统计数据\n */\nexport async function getOrderStatistics() {\n  try {\n    console.log('开始获取订单统计数据...');\n    \n    // 获取不同状态的订单数量，先简化处理，只调用一次API获取所有订单\n    const ordersResponse = await getOrderList({ page: 1, pageSize: 1 });\n    console.log('订单API响应:', ordersResponse);\n    \n    // 检查响应格式并提取total\n    let totalOrders = 0;\n    if (ordersResponse?.total) {\n      totalOrders = ordersResponse.total;\n    } else if (ordersResponse?.data?.length !== undefined) {\n      totalOrders = ordersResponse.data.length;\n    }\n    \n    // 由于没有详细的状态统计API，使用估算值（后续可以改进）\n    const estimatedAssigned = Math.floor(totalOrders * 0.3); // 假设30%已分配\n    const estimatedDelivering = Math.floor(totalOrders * 0.2); // 假设20%配送中\n    const estimatedCompleted = Math.floor(totalOrders * 0.4); // 假设40%已完成\n    \n    const assignmentRate = totalOrders > 0 ? (((estimatedAssigned + estimatedDelivering) / totalOrders) * 100).toFixed(1) : '0.0';\n    \n    const stats = {\n      totalOrders,\n      assigned: estimatedAssigned + estimatedDelivering,\n      delivering: estimatedDelivering,\n      completed: estimatedCompleted,\n      assignmentRate: parseFloat(assignmentRate)\n    };\n    \n    console.log('计算出的订单统计:', stats);\n    return stats;\n  } catch (error) {\n    console.error('获取订单统计失败:', error);\n    // 返回默认值\n    return {\n      totalOrders: 0,\n      assigned: 0,\n      delivering: 0,\n      completed: 0,\n      assignmentRate: 0\n    };\n  }\n}\n\n// 临时函数：随机生成骑手状态（后续应该从真实的位置服务获取）\nfunction getRandomRiderStatus() {\n  const statuses = ['空闲', '配送中', '离线'];\n  return statuses[Math.floor(Math.random() * statuses.length)];\n}\n","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 512 512'\n}\nexport default defineComponent({\n  name: 'CarOutline',\n  render: function render(_ctx, _cache) {\n    return _openBlock(), _createElementBlock('svg', _hoisted_1, _cache[0] || (_cache[0] = [_createStaticVNode('<path d=\"M80 224l37.78-88.15C123.93 121.5 139.6 112 157.11 112h197.78c17.51 0 33.18 9.5 39.33 23.85L432 224\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></path><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M80 224h352v144H80z\"></path><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M112 368v32H80v-32\"></path><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M432 368v32h-32v-32\"></path><circle cx=\"144\" cy=\"288\" r=\"16\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></circle><circle cx=\"368\" cy=\"288\" r=\"16\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"></circle>', 6)]))\n  }\n})\n","<template>\n  <div class=\"order-overview\">\n    <n-card title=\"订单分配总览\" class=\"mb-4\">\n      <template #header-extra>\n        <div class=\"flex items-center gap-3\">\n          <n-button \n            type=\"primary\" \n            size=\"small\" \n            :loading=\"loading\"\n            @click=\"refreshData\"\n          >\n            <template #icon>\n              <n-icon><RefreshOutline /></n-icon>\n            </template>\n            刷新\n          </n-button>\n          <n-select\n            v-model:value=\"selectedStatus\"\n            :options=\"statusOptions\"\n            placeholder=\"筛选状态\"\n            style=\"width: 120px\"\n            size=\"small\"\n            @update:value=\"handleStatusChange\"\n          />\n          <n-text depth=\"3\" style=\"font-size: 12px\">\n            最后更新: {{ lastUpdateTime ? lastUpdateTime.toLocaleTimeString() : '-' }}\n          </n-text>\n        </div>\n      </template>\n\n      <!-- 统计概览 -->\n      <div class=\"mb-6\">\n        <n-grid cols=\"5\" x-gap=\"16\">\n          <n-gi>\n            <n-statistic label=\"总订单数\" :value=\"orderStats.totalOrders\">\n              <template #suffix>\n                <n-text type=\"info\">单</n-text>\n              </template>\n            </n-statistic>\n          </n-gi>\n          <n-gi>\n            <n-statistic label=\"已分配\" :value=\"orderStats.assigned\">\n              <template #suffix>\n                <n-text type=\"success\">单</n-text>\n              </template>\n            </n-statistic>\n          </n-gi>\n          <n-gi>\n            <n-statistic label=\"配送中\" :value=\"orderStats.delivering\">\n              <template #suffix>\n                <n-text type=\"warning\">单</n-text>\n              </template>\n            </n-statistic>\n          </n-gi>\n          <n-gi>\n            <n-statistic label=\"今日完成\" :value=\"orderStats.completed\">\n              <template #suffix>\n                <n-text type=\"success\">单</n-text>\n              </template>\n            </n-statistic>\n          </n-gi>\n          <n-gi>\n            <n-statistic label=\"分配率\" :value=\"orderStats.assignmentRate\">\n              <template #suffix>\n                <n-text type=\"info\">%</n-text>\n              </template>\n            </n-statistic>\n          </n-gi>\n        </n-grid>\n      </div>\n\n      <!-- 骑手订单状态表格 -->\n      <n-data-table\n        :columns=\"columns\"\n        :data=\"filteredData\"\n        :loading=\"loading\"\n        :pagination=\"paginationProps\"\n        flex-height\n        striped\n        size=\"small\"\n        :scroll-x=\"1200\"\n        style=\"height: 400px\"\n      />\n    </n-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, h } from 'vue'\nimport { \n  NCard, \n  NButton, \n  NIcon, \n  NSelect, \n  NText, \n  NGrid, \n  NGi, \n  NStatistic, \n  NDataTable, \n  NBadge,\n  NTime,\n  useMessage \n} from 'naive-ui'\nimport { RefreshOutline } from '@vicons/ionicons5'\nimport { getOrderAssignmentOverview } from '../api/order.ts'\n\n// Props\nconst props = defineProps({\n  autoRefresh: {\n    type: Boolean,\n    default: true\n  },\n  refreshInterval: {\n    type: Number,\n    default: 30000 // 30秒\n  }\n});\n\n// 响应式数据\nconst loading = ref(false)\nconst lastUpdateTime = ref(null)\nconst selectedStatus = ref('all')\nconst message = useMessage()\n\n// 订单统计数据\nconst orderStats = ref({\n  totalOrders: 0,\n  assigned: 0,\n  delivering: 0,\n  completed: 0,\n  assignmentRate: 0\n})\n\n// 骑手数据\nconst ridersData = ref([])\n\n// 状态选项\nconst statusOptions = [\n  { label: '全部状态', value: 'all' },\n  { label: '空闲', value: '空闲' },\n  { label: '配送中', value: '配送中' },\n  { label: '离线', value: '离线' }\n]\n\n// 过滤数据\nconst filteredData = computed(() => {\n  if (selectedStatus.value === 'all') {\n    return ridersData.value\n  }\n  return ridersData.value.filter(item => item.status === selectedStatus.value)\n})\n\n// 表格列定义\nconst columns = [\n  {\n    title: '骑手ID',\n    key: 'riderId',\n    width: 100,\n    fixed: 'left'\n  },\n  {\n    title: '骑手姓名',\n    key: 'riderName',\n    width: 120,\n    fixed: 'left'\n  },\n  {\n    title: '当前状态',\n    key: 'status',\n    width: 100,\n    render(row) {\n      const statusMap = {\n        '空闲': { type: 'success', text: '空闲' },\n        '配送中': { type: 'warning', text: '配送中' },\n        '离线': { type: 'error', text: '离线' }\n      }\n      const status = statusMap[row.status] || { type: 'default', text: '未知' }\n      return h(NBadge, { type: status.type, text: status.text })\n    }\n  },\n  {\n    title: '当前订单',\n    key: 'currentOrders',\n    width: 100,\n    render(row) {\n      return h('span', { \n        style: { \n          fontWeight: 'bold', \n          color: row.currentOrders > 0 ? '#f0a020' : '#666' \n        } \n      }, `${row.currentOrders || 0} 单`)\n    }\n  },\n  {\n    title: '今日完成',\n    key: 'todayCompleted',\n    width: 100,\n    render(row) {\n      return h('span', { style: { color: '#18a058' } }, `${row.todayCompleted || 0} 单`)\n    }\n  },\n  {\n    title: '平均配送时间',\n    key: 'avgDeliveryTime',\n    width: 120,\n    render(row) {\n      return row.avgDeliveryTime ? `${row.avgDeliveryTime} 分钟` : '-'\n    }\n  },\n  {\n    title: '最近订单时间',\n    key: 'lastOrderTime',\n    width: 160,\n    render(row) {\n      return row.lastOrderTime \n        ? h(NTime, { time: new Date(row.lastOrderTime), format: 'MM-dd HH:mm' })\n        : '-'\n    }\n  },\n  {\n    title: '位置信息',\n    key: 'location',\n    width: 150,\n    render(row) {\n      return row.location || '位置未知'\n    }\n  },\n  {\n    title: '操作',\n    key: 'actions',\n    width: 120,\n    fixed: 'right',\n    render(row) {\n      return h('div', { class: 'flex gap-2' }, [\n        h(NButton, \n          { \n            size: 'small', \n            type: 'primary',\n            onClick: () => viewRiderDetails(row.riderId)\n          }, \n          '查看详情'\n        )\n      ])\n    }\n  }\n]\n\n// 分页配置\nconst paginationProps = {\n  pageSize: 15,\n  showSizePicker: true,\n  pageSizes: [10, 15, 20, 50],\n  showQuickJumper: true,\n  prefix: ({ itemCount }) => `共 ${itemCount} 个骑手`\n}\n\n// 自动刷新定时器\nlet refreshTimer = null\n\n// 刷新数据\nconst refreshData = async () => {\n  if (loading.value) return\n  \n  loading.value = true\n  lastUpdateTime.value = new Date()\n  \n  try {\n    console.log('刷新订单分配总览数据...')\n    \n    // 调用真实API获取数据\n    const response = await getOrderAssignmentOverview()\n    \n    orderStats.value = response.orderStats\n    ridersData.value = response.ridersOverview\n    \n    console.log('数据刷新完成', { orderStats: orderStats.value, ridersCount: ridersData.value.length })\n  } catch (error) {\n    console.error('刷新数据失败:', error)\n    \n    // 发生错误时显示错误信息和空数据\n    orderStats.value = {\n      totalOrders: 0,\n      assigned: 0,\n      delivering: 0,\n      completed: 0,\n      assignmentRate: 0\n    }\n    ridersData.value = []\n    \n    // 根据错误类型显示不同的错误信息\n    let errorMessage = '获取订单数据失败'\n    if (error.response?.status === 401) {\n      errorMessage = '认证失败，请重新登录'\n    } else if (error.response?.status === 404) {\n      errorMessage = 'API接口不存在，请联系管理员'\n    } else if (error.response?.status >= 500) {\n      errorMessage = '服务器内部错误，请稍后重试'\n    } else if (error.code === 'NETWORK_ERROR') {\n      errorMessage = '网络连接失败，请检查网络设置'\n    }\n    \n    message.error(errorMessage)\n  } finally {\n    loading.value = false\n  }\n}\n\nconst handleStatusChange = () => {\n  // 状态改变时不需要重新请求数据，只需要过滤本地数据\n  console.log('筛选状态改变:', selectedStatus.value)\n}\n\nconst viewRiderDetails = (riderId) => {\n  // 这里可以路由到骑手详情页或打开详情弹窗\n  console.log('查看骑手详情:', riderId)\n  message.info(`查看骑手 ${riderId} 的详细信息`)\n}\n\n// 启动自动刷新\nconst startAutoRefresh = () => {\n  if (props.autoRefresh && props.refreshInterval > 0) {\n    refreshTimer = setInterval(() => {\n      refreshData()\n    }, props.refreshInterval)\n    console.log(`已启动自动刷新，间隔: ${props.refreshInterval / 1000}秒`)\n  }\n}\n\n// 停止自动刷新\nconst stopAutoRefresh = () => {\n  if (refreshTimer) {\n    clearInterval(refreshTimer)\n    refreshTimer = null\n    console.log('已停止自动刷新')\n  }\n}\n\n// 生命周期\nonMounted(() => {\n  refreshData()\n  startAutoRefresh()\n})\n\nonUnmounted(() => {\n  stopAutoRefresh()\n})\n</script>\n\n<style scoped>\n.order-overview {\n  width: 100%;\n}\n\n.flex {\n  display: flex;\n  align-items: center;\n}\n\n.gap-2 {\n  gap: 8px;\n}\n\n.gap-3 {\n  gap: 12px;\n}\n\n.items-center {\n  align-items: center;\n}\n\n.mb-4 {\n  margin-bottom: 16px;\n}\n\n.mb-6 {\n  margin-bottom: 24px;\n}\n</style>","<script setup lang=\"tsx\">\nimport { ref, onMounted, computed } from 'vue';\nimport { \n  NButton, \n  NInput, \n  NSelect, \n  NSpace, \n  NCard, \n  NModal, \n  NForm, \n  NFormItem, \n  NText, \n  NSpin, \n  NBadge, \n  NGrid, \n  NGi, \n  NStatistic,\n  NIcon,\n  NAvatar,\n  NDivider,\n  NDataTable,\n  NTag,\n  useMessage \n} from 'naive-ui';\nimport type { DataTableColumns } from 'naive-ui';\nimport { \n  BicycleOutline,\n  SearchOutline,\n  RefreshOutline,\n  PersonOutline,\n  CallOutline,\n  CarOutline,\n  TrophyOutline,\n  StatsChartOutline,\n  EyeOutline,\n  WalletOutline\n} from '@vicons/ionicons5';\nimport { fetchRidersList, fetchRiderInfo, fetchRiderPerformanceRanking } from '@/api/rider';\nimport OrderOverview from '@/components/OrderOverview.vue';\n\n\ndefineOptions({\n  name: 'rider-manage'\n});\n\nconst message = useMessage();\nconst loading = ref(false);\nconst tableData = ref<any[]>([]);\n\nconst pagination = ref({\n  page: 1,\n  pageSize: 20,\n  totalCount: 0,\n  totalPages: 0\n});\n\n// 搜索条件\nconst searchParams = ref({\n  searchTerm: '',\n  page: 1,\n  pageSize: 20\n});\n\n\n\n// 骑手统计数据\nconst riderStats = computed(() => {\n  const total = tableData.value.length;\n  const onlineCount = tableData.value.filter(rider => rider.status === 1).length;\n  const offlineCount = tableData.value.filter(rider => rider.status === 0).length;\n  const busyCount = tableData.value.filter(rider => rider.status === 2).length;\n  const withVehicle = tableData.value.filter(rider => rider.vehicleNumber).length;\n  \n  return {\n    total,\n    onlineCount,\n    offlineCount,\n    busyCount,\n    withVehicle,\n    onlineRate: total > 0 ? Math.round((onlineCount / total) * 100) : 0,\n    vehicleRate: total > 0 ? Math.round((withVehicle / total) * 100) : 0\n  };\n});\n\n// 过滤后的表格数据\nconst filteredTableData = computed(() => {\n  return tableData.value.filter(rider => {\n    if (searchParams.value.searchTerm) {\n      const searchTerm = searchParams.value.searchTerm.toLowerCase();\n      if (!rider.name?.toLowerCase().includes(searchTerm) && \n          !rider.phoneNumber?.toLowerCase().includes(searchTerm)) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n});\n\n// 详情弹窗相关\nconst showDetailModal = ref(false);\nconst detailLoading = ref(false);\nconst riderDetail = ref<any>({});\nconst riderRanking = ref<any>({});\n\n// 当前日期\nconst currentDate = new Date();\nconst currentYear = currentDate.getFullYear();\nconst currentMonth = currentDate.getMonth() + 1;\n\n\n\n\n\n// 获取骑手列表数据\nasync function getRidersList() {\n  try {\n    loading.value = true;\n    \n    // 构建查询参数\n    const params = {\n      page: searchParams.value.page,\n      pageSize: searchParams.value.pageSize\n    };\n    \n    if (searchParams.value.searchTerm) {\n      params.searchTerm = searchParams.value.searchTerm;\n    }\n    \n\n    \n    console.log('🚀 开始请求骑手列表，参数:', params);\n    const response = await fetchRidersList(params);\n    console.log('📥 收到骑手列表响应:', response);\n    \n    if (response && response.data) {\n      console.log('详细的响应数据结构:', response.data);\n      \n      // 尝试多种可能的数据结构\n      let riders = null;\n      let paginationInfo = null;\n      \n      // 情况1: 标准格式 { Riders, Pagination }\n      if (response.data.Riders && Array.isArray(response.data.Riders)) {\n        riders = response.data.Riders;\n        paginationInfo = response.data.Pagination;\n      }\n      // 情况2: 小写格式 { riders, pagination }\n      else if (response.data.riders && Array.isArray(response.data.riders)) {\n        riders = response.data.riders;\n        paginationInfo = response.data.pagination;\n      }\n      // 情况3: 直接是数组\n      else if (Array.isArray(response.data)) {\n        riders = response.data;\n        paginationInfo = null;\n      }\n      \n      console.log('解析出的骑手数据:', riders);\n      console.log('解析出的分页信息:', paginationInfo);\n      \n      if (riders && Array.isArray(riders)) {\n        tableData.value = riders.map((rider, index) => ({\n          ...rider,\n          index: (pagination.value.page - 1) * pagination.value.pageSize + index + 1,\n          riderId: rider.riderId || rider.RiderId || '-',\n          name: rider.name || rider.Name || '-',\n          phoneNumber: rider.phoneNumber || rider.PhoneNumber || '-',\n          vehicleNumber: rider.vehicleNumber || rider.VehicleNumber || '-',\n          applicationUserId: rider.applicationUserId || rider.ApplicationUserId || '-'\n        }));\n        \n        console.log('处理后的表格数据:', tableData.value);\n        \n        // 更新分页信息\n        if (paginationInfo) {\n          pagination.value = {\n            page: paginationInfo.page || paginationInfo.Page || 1,\n            pageSize: paginationInfo.pageSize || paginationInfo.PageSize || 20,\n            totalCount: paginationInfo.totalCount || paginationInfo.TotalCount || 0,\n            totalPages: paginationInfo.totalPages || paginationInfo.TotalPages || 0\n          };\n        } else {\n          // 如果没有分页信息，使用数组长度\n          pagination.value.totalCount = riders.length;\n          pagination.value.totalPages = Math.ceil(riders.length / pagination.value.pageSize);\n        }\n      } else {\n        console.log('没有找到有效的骑手数据数组');\n        tableData.value = [];\n      }\n    } else {\n      message.error(response?.message || '获取骑手列表失败');\n      tableData.value = [];\n    }\n  } catch (error) {\n    message.error('获取骑手列表失败: ' + error.message);\n    tableData.value = [];\n    console.error('Error fetching riders list:', error);\n  } finally {\n    loading.value = false;\n  }\n}\n\n// 搜索骑手\nfunction handleSearch() {\n  message.success(`找到 ${filteredTableData.value.length} 名骑手`);\n}\n\n// 重置搜索条件\nfunction handleReset() {\n  searchParams.value = {\n    searchTerm: '',\n    status: null,\n    page: 1,\n    pageSize: 20\n  };\n  message.info('搜索条件已重置');\n}\n\n// 刷新数据\nfunction handleRefresh() {\n  message.info('正在刷新骑手数据...');\n  getRidersList();\n}\n\n\n\n// 分页变化\nfunction handlePageChange(page: number) {\n  searchParams.value.page = page;\n  pagination.value.page = page;\n  getRidersList();\n}\n\nconst columns: DataTableColumns = [\n  {\n    key: 'index',\n    title: '序号',\n    align: 'center',\n    width: 70,\n    render: (row, index) => (\n      <n-badge value={index + 1} type=\"warning\" />\n    )\n  },\n  {\n    key: 'riderInfo',\n    title: '骑手信息',\n    width: 220,\n    render: (row) => (\n      <div class=\"flex items-center gap-12px\">\n        <n-avatar\n          size=\"medium\"\n          style={{\n            backgroundColor: row.status === 1 ? '#fa8c16' : row.status === 0 ? '#d9d9d9' : '#faad14'\n          }}\n        >\n          <n-icon>\n            <BicycleOutline />\n          </n-icon>\n        </n-avatar>\n        <div class=\"flex flex-col\">\n          <n-text strong>{row.name || '未设置姓名'}</n-text>\n          <n-text depth=\"3\" style=\"font-size: 12px;\">\n            ID: {row.riderId?.slice(-8) || '-'}\n          </n-text>\n        </div>\n      </div>\n    )\n  },\n  {\n    key: 'contactInfo',\n    title: '联系方式',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <div class=\"flex items-center justify-center gap-4px\">\n        <n-icon color=\"#1890ff\" size=\"14\">\n          <CallOutline />\n        </n-icon>\n        <n-text style=\"font-size: 12px;\">{row.phoneNumber || '未提供'}</n-text>\n      </div>\n    )\n  },\n  {\n    key: 'vehicleInfo',\n    title: '车辆信息',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <div class=\"flex items-center justify-center gap-4px\">\n        <n-icon color={row.vehicleNumber ? '#52c41a' : '#d9d9d9'} size=\"14\">\n          <CarOutline />\n        </n-icon>\n        <n-text style=\"font-size: 12px;\">{row.vehicleNumber || '未登记'}</n-text>\n      </div>\n    )\n  },\n  {\n    key: 'userAccount',\n    title: '关联账户',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <div class=\"flex items-center justify-center gap-4px\">\n        <n-icon color=\"#722ed1\" size=\"14\">\n          <PersonOutline />\n        </n-icon>\n        <n-text style=\"font-size: 12px; word-break: break-all;\" depth=\"3\">\n          {row.applicationUserId?.slice(-8) || '未关联'}\n        </n-text>\n      </div>\n    )\n  },\n  {\n    key: 'actions',\n    title: '操作',\n    align: 'center',\n    width: 140,\n    render: (row) => (\n      <n-button \n        type=\"primary\" \n        size=\"small\" \n        onClick={() => handleViewDetail(row.riderId)}\n        style=\"border-radius: 6px; background: linear-gradient(135deg, #fa8c16, #faad14);\"\n      >\n        <div style=\"display: flex; align-items: center; gap: 4px;\">\n          <n-icon size=\"14\">\n            <TrophyOutline />\n          </n-icon>\n          查看绩效\n        </div>\n      </n-button>\n    )\n  }\n];\n\n// 查看骑手详情\nasync function handleViewDetail(riderId: string) {\n  try {\n    detailLoading.value = true;\n    showDetailModal.value = true;\n    riderDetail.value = {};\n    riderRanking.value = {};\n    \n    console.log(`获取骑手详情和绩效排名，ID: ${riderId}`);\n    \n    // 并发请求骑手详情和绩效排名\n    const [detailResponse, rankingResponse] = await Promise.allSettled([\n      fetchRiderInfo(riderId),\n      fetchRiderPerformanceRanking(riderId, currentYear, currentMonth)\n    ]);\n    \n    // 处理骑手详情\n    if (detailResponse.status === 'fulfilled' && detailResponse.value?.data) {\n      riderDetail.value = detailResponse.value.data;\n      console.log('骑手详情:', riderDetail.value);\n    } else {\n      console.error('获取骑手详情失败:', detailResponse);\n    }\n    \n    // 处理绩效排名\n    if (rankingResponse.status === 'fulfilled' && rankingResponse.value?.data) {\n      riderRanking.value = rankingResponse.value.data;\n      console.log('骑手绩效排名:', riderRanking.value);\n    } else {\n      console.error('获取骑手绩效排名失败:', rankingResponse);\n    }\n    \n  } catch (error) {\n    console.error('获取骑手信息失败:', error);\n    message.error('获取骑手信息失败: ' + (error.message || '未知错误'));\n    showDetailModal.value = false;\n  } finally {\n    detailLoading.value = false;\n  }\n}\n\n// 注释：原 handleViewPerformance 函数已删除，功能合并到 handleViewDetail\n\n// 格式化排名键名\nfunction formatRankingKey(key: string) {\n  const keyMap = {\n    'totalOrdersRanking': '总订单排名',\n    'onTimeRateRanking': '准时率排名', \n    'goodReviewRateRanking': '好评率排名',\n    'incomeRanking': '收入排名',\n    'TotalOrdersRanking': '总订单排名',\n    'OnTimeRateRanking': '准时率排名',\n    'GoodReviewRateRanking': '好评率排名',\n    'IncomeRanking': '收入排名',\n    // 英文字段名翻译\n    'IncomeRank': '收入排名',\n    'OnTimeRateRank': '准时率排名',\n    'GoodReviewRateRank': '好评率排名',\n    'TotalOrdersRank': '总订单排名'\n  };\n  return keyMap[key] || key;\n}\n\n// 获取排名徽章类型\nfunction getRankingBadgeType(rank: number) {\n  if (rank <= 3) return 'success';  // 前3名 - 绿色\n  if (rank <= 10) return 'warning'; // 4-10名 - 黄色\n  return 'info';                    // 其他 - 蓝色\n}\n\n\n\n// 格式化时间显示\nfunction formatTime(timeStr: string) {\n  if (!timeStr) return '未知时间';\n  \n  try {\n    const date = new Date(timeStr);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    \n    if (diffMins < 1) return '刚刚';\n    if (diffMins < 60) return `${diffMins}分钟前`;\n    if (diffMins < 1440) return `${Math.floor(diffMins / 60)}小时前`;\n    \n    return date.toLocaleDateString() + ' ' + date.toLocaleTimeString().slice(0, 5);\n  } catch {\n    return '时间格式错误';\n  }\n}\n\n// 组件挂载时获取数据\nonMounted(() => {\n  getRidersList();\n});\n</script>\n\n<template>\n  <div class=\"p-6 min-h-full bg-gradient-to-br from-orange-50 to-yellow-50\">\n    <!-- 页面标题 -->\n    <div class=\"mb-6\">\n      <h1 class=\"text-2xl font-bold text-gray-800 mb-2 flex items-center gap-2\">\n        <n-icon size=\"24\" color=\"#fa8c16\">\n          <BicycleOutline />\n        </n-icon>\n        骑手管理中心\n      </h1>\n      <p class=\"text-gray-600\">管理骑手信息和绩效排名</p>\n    </div>\n\n    <!-- 统计卡片区域 -->\n    <n-grid :cols=\"5\" :x-gap=\"16\" :y-gap=\"16\" class=\"mb-6\">\n      <n-gi>\n        <n-card :bordered=\"false\" class=\"shadow-sm hover:shadow-lg transition-shadow duration-300\">\n          <n-statistic\n            label=\"总骑手数\"\n            :value=\"riderStats.total\"\n            value-style=\"color: #fa8c16; font-weight: bold;\"\n          >\n            <template #prefix>\n              <n-icon size=\"20\" color=\"#fa8c16\">\n                <BicycleOutline />\n              </n-icon>\n            </template>\n          </n-statistic>\n        </n-card>\n      </n-gi>\n      <n-gi>\n        <n-card :bordered=\"false\" class=\"shadow-sm hover:shadow-lg transition-shadow duration-300\">\n          <n-statistic\n            label=\"在线配送\"\n            :value=\"riderStats.onlineCount\"\n            value-style=\"color: #fa8c16; font-weight: bold;\"\n          >\n            <template #prefix>\n              <n-icon size=\"20\" color=\"#fa8c16\">\n                <FlashOutline />\n              </n-icon>\n            </template>\n          </n-statistic>\n        </n-card>\n      </n-gi>\n      <n-gi>\n        <n-card :bordered=\"false\" class=\"shadow-sm hover:shadow-lg transition-shadow duration-300\">\n          <n-statistic\n            label=\"离线休息\"\n            :value=\"riderStats.offlineCount\"\n            value-style=\"color: #d9d9d9; font-weight: bold;\"\n          >\n            <template #prefix>\n              <n-icon size=\"20\" color=\"#d9d9d9\">\n                <PauseCircleOutline />\n              </n-icon>\n            </template>\n          </n-statistic>\n        </n-card>\n      </n-gi>\n      <n-gi>\n        <n-card :bordered=\"false\" class=\"shadow-sm hover:shadow-lg transition-shadow duration-300\">\n          <n-statistic\n            label=\"忙碌配送\"\n            :value=\"riderStats.busyCount\"\n            value-style=\"color: #ff4d4f; font-weight: bold;\"\n          >\n            <template #prefix>\n              <n-icon size=\"20\" color=\"#ff4d4f\">\n                <TimeOutline />\n              </n-icon>\n            </template>\n          </n-statistic>\n        </n-card>\n      </n-gi>\n      <n-gi>\n        <n-card :bordered=\"false\" class=\"shadow-sm hover:shadow-lg transition-shadow duration-300\">\n          <n-statistic\n            label=\"在线率\"\n            :value=\"riderStats.onlineRate\"\n            value-style=\"color: #52c41a; font-weight: bold;\"\n          >\n            <template #suffix>\n              <span class=\"text-sm text-gray-500\">%</span>\n            </template>\n            <template #prefix>\n              <n-icon size=\"20\" color=\"#52c41a\">\n                <StatsChartOutline />\n              </n-icon>\n            </template>\n          </n-statistic>\n        </n-card>\n      </n-gi>\n    </n-grid>\n\n    <!-- 订单分配总览 -->\n    <OrderOverview \n      :auto-refresh=\"true\"\n      :refresh-interval=\"30000\"\n      class=\"mb-6\"\n    />\n\n    <!-- 搜索筛选区域 -->\n    <n-card title=\"筛选条件\" class=\"mb-6 shadow-sm\" :bordered=\"false\">\n      <template #header-extra>\n        <n-space>\n          <n-button size=\"small\" @click=\"handleSearch\" type=\"primary\">\n            <template #icon>\n              <n-icon>\n                <SearchOutline />\n              </n-icon>\n            </template>\n            搜索\n          </n-button>\n          <n-button size=\"small\" @click=\"handleReset\">\n            <template #icon>\n              <n-icon>\n                <RefreshOutline />\n              </n-icon>\n            </template>\n            重置\n          </n-button>\n        </n-space>\n      </template>\n      \n      <n-form :model=\"searchParams\" inline label-placement=\"left\" label-width=\"80\">\n        <n-form-item label=\"搜索条件\">\n          <n-input\n            v-model:value=\"searchParams.searchTerm\"\n            placeholder=\"请输入骑手姓名或手机号\"\n            clearable\n            style=\"width: 250px\"\n          />\n        </n-form-item>\n      </n-form>\n    </n-card>\n\n    <!-- 骑手列表 -->\n    <n-card :bordered=\"false\" class=\"shadow-sm\">\n      <template #header>\n        <div class=\"flex items-center gap-2\">\n          <n-icon size=\"18\" color=\"#fa8c16\">\n            <BicycleOutline />\n          </n-icon>\n          <span class=\"font-medium\">骑手列表</span>\n        </div>\n      </template>\n      \n      <template #header-extra>\n        <n-space align=\"center\">\n          <n-text depth=\"3\">\n            显示 {{ filteredTableData.length }} / {{ tableData.length }} 条记录\n          </n-text>\n          <n-button size=\"small\" @click=\"handleRefresh\" :loading=\"loading\">\n            <template #icon>\n              <n-icon>\n                <RefreshOutline />\n              </n-icon>\n            </template>\n            刷新\n          </n-button>\n        </n-space>\n      </template>\n      \n      <n-data-table\n        :columns=\"columns\"\n        :data=\"filteredTableData\"\n        :loading=\"loading\"\n        :pagination=\"{ pageSize: 10, showSizePicker: true, pageSizes: [10, 20, 50] }\"\n        flex-height\n        class=\"min-h-400px\"\n        :row-class-name=\"() => 'hover:bg-orange-50 transition-colors duration-200'\"\n      />\n    </n-card>\n    \n    <!-- 骑手详情弹窗 -->\n    <n-modal \n      v-model:show=\"showDetailModal\" \n      preset=\"card\" \n      style=\"width: 900px; max-height: 80vh;\" \n      class=\"rounded-2xl\"\n      :mask-closable=\"false\"\n    >\n      <template #header>\n        <div class=\"flex items-center gap-3\">\n          <n-avatar \n            :size=\"40\"\n            style=\"background: linear-gradient(135deg, #fa8c16, #faad14)\"\n          >\n            <n-icon size=\"20\">\n              <BicycleOutline />\n            </n-icon>\n          </n-avatar>\n          <div>\n            <h3 class=\"text-lg font-semibold text-gray-800\">\n              {{ riderDetail.name || riderDetail.Name || '骑手绩效信息' }}\n            </h3>\n            <p class=\"text-sm text-gray-500\">\n              ID: {{ riderDetail.riderId || riderDetail.RiderId || '-' }}\n            </p>\n          </div>\n        </div>\n      </template>\n\n      <div v-if=\"!detailLoading\" class=\"space-y-6\">\n        <!-- 绩效概览 -->\n        <div class=\"bg-gradient-to-r from-orange-50 to-yellow-50 p-4 rounded-lg\">\n          <h4 class=\"text-gray-800 font-medium mb-4 flex items-center gap-2\">\n            <n-icon color=\"#fa8c16\">\n              <TrophyOutline />\n            </n-icon>\n            {{ currentYear }}年{{ currentMonth }}月绩效概览\n          </h4>\n          \n          <n-grid :cols=\"4\" :x-gap=\"20\" v-if=\"Object.keys(riderRanking).length > 0\">\n            <n-gi v-for=\"(value, key) in riderRanking\" :key=\"key\">\n              <div class=\"text-center\">\n                <div class=\"text-2xl font-bold\" :class=\"{\n                  'text-yellow-600': getRankingBadgeType(value) === 'success',\n                  'text-orange-600': getRankingBadgeType(value) === 'warning',\n                  'text-blue-600': getRankingBadgeType(value) === 'info'\n                }\">\n                  {{ value }}\n                </div>\n                <div class=\"text-sm text-gray-600\">{{ formatRankingKey(key) }}</div>\n              </div>\n            </n-gi>\n          </n-grid>\n          \n          <div v-else class=\"text-center py-8\">\n            <n-icon size=\"48\" color=\"#d9d9d9\">\n              <StatsChartOutline />\n            </n-icon>\n            <p class=\"text-gray-500 mt-2\">暂无当月绩效数据</p>\n          </div>\n        </div>\n\n        <n-divider />\n\n        <!-- 详细信息 -->\n        <n-grid :cols=\"2\" :x-gap=\"24\" :y-gap=\"20\">\n          <!-- 基本信息 -->\n          <n-gi>\n            <n-card title=\"基本信息\" size=\"small\" class=\"h-full\">\n              <template #header-extra>\n                <n-icon color=\"#fa8c16\">\n                  <PersonOutline />\n                </n-icon>\n              </template>\n              \n              <div class=\"space-y-4\">\n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">骑手ID</span>\n                  <n-text code style=\"word-break: break-all; max-width: 200px;\">\n                    {{ riderDetail.riderId || riderDetail.RiderId || '-' }}\n                  </n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">姓名</span>\n                  <n-text strong>{{ riderDetail.name || riderDetail.Name || '未设置' }}</n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium flex items-center gap-2\">\n                    <n-icon size=\"16\" color=\"#1890ff\">\n                      <CallOutline />\n                    </n-icon>\n                    手机号\n                  </span>\n                  <n-text>{{ riderDetail.phoneNumber || riderDetail.PhoneNumber || '未设置' }}</n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2\">\n                  <span class=\"text-gray-600 font-medium flex items-center gap-2\">\n                    <n-icon size=\"16\" color=\"#52c41a\">\n                      <CarOutline />\n                    </n-icon>\n                    车牌号\n                  </span>\n                  <n-text>{{ riderDetail.vehicleNumber || riderDetail.VehicleNumber || '未登记' }}</n-text>\n                </div>\n              </div>\n            </n-card>\n          </n-gi>\n          \n          <!-- 账户信息 -->\n          <n-gi>\n            <n-card title=\"账户关联\" size=\"small\" class=\"h-full\">\n              <template #header-extra>\n                <n-icon color=\"#722ed1\">\n                  <PersonOutline />\n                </n-icon>\n              </template>\n              \n              <div class=\"space-y-4\">\n                <div class=\"flex justify-between items-start py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">关联用户ID</span>\n                  <n-text style=\"word-break: break-all; max-width: 200px;\">\n                    {{ riderDetail.applicationUserId || riderDetail.ApplicationUserId || '未关联' }}\n                  </n-text>\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2 border-b border-gray-100\">\n                  <span class=\"text-gray-600 font-medium\">账户状态</span>\n                  <n-badge \n                    :value=\"riderDetail.applicationUserId ? '已关联' : '未关联'\" \n                    :type=\"riderDetail.applicationUserId ? 'success' : 'warning'\"\n                  />\n                </div>\n                \n                <div class=\"flex justify-between items-center py-2\">\n                  <span class=\"text-gray-600 font-medium\">车辆状态</span>\n                  <n-badge \n                    :value=\"riderDetail.vehicleNumber ? '已登记' : '未登记'\" \n                    :type=\"riderDetail.vehicleNumber ? 'success' : 'warning'\"\n                  />\n                </div>\n              </div>\n            </n-card>\n          </n-gi>\n        </n-grid>\n\n        <!-- 绩效排名详情 -->\n        <div v-if=\"Object.keys(riderRanking).length > 0\">\n          <n-divider>\n            <n-icon color=\"#fa8c16\">\n              <TrophyOutline />\n            </n-icon>\n            详细排名\n          </n-divider>\n          \n          <n-grid :cols=\"2\" :x-gap=\"16\" :y-gap=\"12\">\n            <n-gi v-for=\"(value, key) in riderRanking\" :key=\"key\">\n              <div class=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div class=\"flex items-center gap-2\">\n                  <n-icon color=\"#fa8c16\" size=\"16\">\n                    <StatsChartOutline />\n                  </n-icon>\n                  <span class=\"text-gray-700 font-medium\">{{ formatRankingKey(key) }}</span>\n                </div>\n                <n-badge \n                  :value=\"`第${value}名`\" \n                  :type=\"getRankingBadgeType(value)\"\n                  style=\"--n-font-size: 12px;\"\n                />\n              </div>\n            </n-gi>\n          </n-grid>\n        </div>\n\n      </div>\n      \n      <!-- 加载状态 -->\n      <div v-else class=\"flex justify-center items-center h-80\">\n        <n-spin size=\"large\">\n          <template #description>\n            <div class=\"text-center mt-4\">\n              <p class=\"text-gray-600\">正在加载骑手信息...</p>\n              <p class=\"text-sm text-gray-400 mt-1\">请稍候片刻</p>\n            </div>\n          </template>\n        </n-spin>\n      </div>\n    </n-modal>\n  </div>\n</template>\n\n<style scoped>\n/* 骑手管理页面样式 */\n.rider-manage-container {\n  background: linear-gradient(135deg, #fff7e6 0%, #fff2e8 100%);\n  min-height: 100vh;\n}\n\n/* 统计卡片动画 */\n.n-card {\n  transition: all 0.3s ease;\n}\n\n.n-card:hover {\n  transform: translateY(-2px);\n}\n\n/* 表格行悬停效果 */\n:deep(.n-data-table-tr:hover) {\n  background-color: rgba(250, 140, 22, 0.05) !important;\n}\n\n/* 骑手状态指示器 */\n.rider-status {\n  position: relative;\n}\n\n.rider-status::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: -8px;\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  transform: translateY(-50%);\n}\n\n.status-online::before {\n  background-color: #fa8c16;\n  box-shadow: 0 0 0 2px rgba(250, 140, 22, 0.2);\n  animation: pulse-orange 2s infinite;\n}\n\n.status-offline::before {\n  background-color: #d9d9d9;\n  box-shadow: 0 0 0 2px rgba(217, 217, 217, 0.2);\n}\n\n.status-busy::before {\n  background-color: #ff4d4f;\n  box-shadow: 0 0 0 2px rgba(255, 77, 79, 0.2);\n  animation: pulse-red 2s infinite;\n}\n\n/* 骑手头像样式 */\n.rider-avatar {\n  background: linear-gradient(135deg, #fa8c16 0%, #faad14 100%);\n  border: 2px solid #fff;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n/* 搜索表单优化 */\n:deep(.n-form-item-label__text) {\n  font-weight: 500;\n  color: #4a5568;\n}\n\n/* 按钮圆角优化 */\n:deep(.n-button) {\n  border-radius: 8px;\n  font-weight: 500;\n}\n\n/* 渐变按钮特殊样式 */\n.gradient-button {\n  background: linear-gradient(135deg, #fa8c16, #faad14);\n  border: none;\n  color: white;\n}\n\n.gradient-button:hover {\n  background: linear-gradient(135deg, #e6780e, #e89f13);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 8px rgba(250, 140, 22, 0.3);\n}\n\n/* 输入框圆角优化 */\n:deep(.n-input) {\n  border-radius: 8px;\n}\n\n:deep(.n-select) {\n  border-radius: 8px;\n}\n\n/* 数据表格优化 */\n:deep(.n-data-table) {\n  border-radius: 12px;\n  overflow: hidden;\n}\n\n:deep(.n-data-table-th) {\n  background-color: #fff7e6;\n  font-weight: 600;\n  color: #4a5568;\n}\n\n/* 状态标签优化 */\n:deep(.n-tag) {\n  border-radius: 12px;\n  font-weight: 500;\n}\n\n/* 模态框优化 */\n:deep(.n-modal) {\n  border-radius: 16px;\n  overflow: hidden;\n}\n\n/* 加载动画优化 */\n:deep(.n-spin) {\n  color: #fa8c16;\n}\n\n/* 绩效排名样式 */\n.performance-rank {\n  transition: all 0.3s ease;\n}\n\n.performance-rank:hover {\n  background-color: rgba(250, 140, 22, 0.1);\n  transform: scale(1.02);\n}\n\n/* 排名徽章特殊样式 */\n.rank-badge-gold {\n  background: linear-gradient(135deg, #ffd700, #ffed4a);\n  color: #8b5a00;\n}\n\n.rank-badge-silver {\n  background: linear-gradient(135deg, #c0c0c0, #e5e5e5);\n  color: #666;\n}\n\n.rank-badge-bronze {\n  background: linear-gradient(135deg, #cd7f32, #daa520);\n  color: #654321;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .p-6 {\n    padding: 1rem;\n  }\n  \n  .n-grid[cols=\"5\"] {\n    grid-div-columns: repeat(2, 1fr);\n  }\n  \n  .n-modal {\n    width: 95vw !important;\n    max-width: none !important;\n  }\n}\n\n/* 动画效果 */\n@keyframes pulse-orange {\n  0% {\n    box-shadow: 0 0 0 0 rgba(250, 140, 22, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 4px rgba(250, 140, 22, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(250, 140, 22, 0);\n  }\n}\n\n@keyframes pulse-red {\n  0% {\n    box-shadow: 0 0 0 0 rgba(255, 77, 79, 0.4);\n  }\n  70% {\n    box-shadow: 0 0 0 4px rgba(255, 77, 79, 0);\n  }\n  100% {\n    box-shadow: 0 0 0 0 rgba(255, 77, 79, 0);\n  }\n}\n\n/* 页面进入动画 */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.fade-in-up {\n  animation: fadeInUp 0.6s ease-out;\n}\n\n\n\n/* 绩效卡片特效 */\n.performance-card {\n  position: relative;\n  overflow: hidden;\n  background: linear-gradient(135deg, #fff7e6, #fff2e8);\n}\n\n.performance-card::before {\n  content: '';\n  position: absolute;\n  top: -50%;\n  left: -50%;\n  width: 200%;\n  height: 200%;\n  background: conic-gradient(from 0deg, transparent, rgba(250, 140, 22, 0.1), transparent);\n  animation: rotate 4s linear infinite;\n  pointer-events: none;\n}\n\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style> "],"names":["compareAsc","dateLeft","dateRight","_dateLeft","toDate","_dateRight","diff","getRoundingMethod","method","number","result","formatDistanceStrict","date","baseDate","options","defaultOptions","getDefaultOptions","locale","defaultLocale","comparison","localizeOptions","roundingMethod","milliseconds","minutes","millisecondsInMinute","timezoneOffset","getTimezoneOffsetInMilliseconds","dstNormalizedMinutes","defaultUnit","unit","minutesInDay","minutesInMonth","minutesInYear","seconds","roundedMinutes","hours","days","months","years","fromUnixTime","unixTime","timeProps","NTime","defineComponent","props","now","localeRef","dateLocaleRef","useLocale","mergedFormatRef","computed","timeZone","time","_format","formatInTimeZone","format","dateFnsOptionsRef","mergedTimeRef","mergedToRef","to","createTextVNode","h","getAllMerchants","params","get","getMerchantOrders","merchantId","getRiderAssignments","riderId","getOrderList","merchantsResponse","merchants","firstMerchant","ordersResponse","error","getOrderAssignmentOverview","ridersResponse","riders","orderStats","getOrderStatistics","limitedRiders","ridersWithOrders","rider","assignments","todayCompleted","avgDeliveryTime","getRandomRiderStatus","remainingRiders","allRidersOverview","totalOrders","estimatedAssigned","estimatedDelivering","estimatedCompleted","assignmentRate","stats","statuses","_hoisted_1","CarOutline","_ctx","_cache","_openBlock","_createElementBlock","_createStaticVNode","__props","loading","ref","lastUpdateTime","selectedStatus","message","useMessage","ridersData","statusOptions","filteredData","item","columns","row","status","NBadge","NButton","viewRiderDetails","paginationProps","itemCount","refreshTimer","refreshData","response","errorMessage","handleStatusChange","startAutoRefresh","stopAutoRefresh","onMounted","onUnmounted","_createVNode","_unref","NCard","_createElementVNode","_hoisted_2","NIcon","RefreshOutline","NSelect","$event","NText","_createTextVNode","_toDisplayString","_hoisted_3","NGrid","NGi","NStatistic","NDataTable","tableData","pagination","page","pageSize","totalCount","totalPages","searchParams","searchTerm","riderStats","total","value","length","onlineCount","filter","offlineCount","busyCount","withVehicle","vehicleNumber","onlineRate","Math","round","vehicleRate","filteredTableData","toLowerCase","name","includes","phoneNumber","showDetailModal","detailLoading","riderDetail","riderRanking","currentDate","Date","currentYear","getFullYear","currentMonth","getMonth","getRidersList","console","log","fetchRidersList","data","paginationInfo","Riders","Array","isArray","Pagination","map","index","RiderId","Name","PhoneNumber","VehicleNumber","applicationUserId","ApplicationUserId","Page","PageSize","TotalCount","TotalPages","ceil","handleSearch","success","handleReset","info","handleRefresh","key","title","align","width","render","_createVNode2","_resolveComponent2","backgroundColor","default","BicycleOutline","_createTextVNode2","slice","CallOutline","PersonOutline","onClick","handleViewDetail","TrophyOutline","detailResponse","rankingResponse","Promise","allSettled","fetchRiderInfo","fetchRiderPerformanceRanking","formatRankingKey","getRankingBadgeType","rank","size","color","class","cols","bordered","label","prefix","_component_FlashOutline","_component_PauseCircleOutline","_component_TimeOutline","suffix","StatsChartOutline","OrderOverview","NSpace","type","icon","SearchOutline","NForm","model","inline","NFormItem","NInput","placeholder","clearable","style","header","_hoisted_4","depth","showSizePicker","pageSizes","row-class-name","NModal","show","preset","_hoisted_5","NAvatar","_hoisted_6","_hoisted_7","_hoisted_29","NSpin","description","_hoisted_8","_hoisted_9","_hoisted_10","Object","keys","_createBlock","_Fragment","_renderList","_hoisted_11","_hoisted_12","_hoisted_13","NDivider","_hoisted_14","_hoisted_15","code","_hoisted_16","strong","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,6]}